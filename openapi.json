{
    "openapi": "3.0.0",
    "info": {
        "title": "IDP Box",
        "description": "IDP Box API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://idp-box.api.130.193.34.51.nip.io",
            "description": "Test server"
        }
    ],
    "tags": [
        {
            "name": "Base",
            "description": "01. Общие настройки"
        },
        {
            "name": "Auth",
            "description": "02. Аутенфикация"
        },
        {
            "name": "Feedback",
            "description": "03. Обратная связь"
        },
        {
            "name": "Users",
            "description": "04. Пользователи"
        },
        {
            "name": "Competencies",
            "description": "05. Компетенции"
        },
        {
            "name": "Targets",
            "description": "06. Цели"
        }
    ],
    "paths": {
        "/configuration": {
            "get": {
                "security": [],
                "tags": [
                    "Base"
                ],
                "summary": "01.01. Получить конфигурацию компании",
                "description": "Получить конфигурацию компании",
                "operationId": "getConfiguration",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "required": false,
                        "description": "ID компании. Если передан, то имеет приоритет над company_domain.",
                        "example": 128,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "company_domain",
                        "in": "query",
                        "required": false,
                        "description": "Домен компании. Передавать в случае, если не известен company_id.",
                        "example": "my.favorite.company.com",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Объект конфигурации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.Configuration.Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Компания не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.01. Получение токенов по логину / паролю",
                "description": "Получение токенов по логину / паролю",
                "operationId": "authByLoginAndPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.Login.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.Login.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "security": [],
                "summary": "02.02. Обновление токенов",
                "description": "Обновление токенов",
                "operationId": "refreshPairOfTokens",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.RefreshToken.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обновление токенов прошло успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.Login.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка обновления токенов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "02.03. Выход из профиля авторизации",
                "description": "Выход из профиля авторизации",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Выход из профиля прошёл успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка выхода из профиля (пользователь не был авторизован)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password/forgot-password": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.04. Запрос на восстановление пароля",
                "description": "Запрос на восстановление пароля",
                "operationId": "resetPasswordForgotPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.ResetPassword.ForgotPassword.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Письмо со ссылкой для восстановления пароля отправлено успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.ResetPassword.ForgotPassword.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при попытке восстановления пароля",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password/check-token": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.05. Проверка токена для восстановления пароля",
                "description": "Проверка токена для восстановления пароля",
                "operationId": "resetPasswordCheckToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.ResetPassword.CheckToken.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Проверка выполнена успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при проверке кода",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password/save-new-password": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.06. Сохранение нового пароля",
                "description": "Сохранение нового пароля",
                "operationId": "resetPasswordSaveNewPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.ResetPassword.SaveNewPassword.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пароль успешно сохранен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при сохранении пароля",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.ResetPassword.SaveNewPassword.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password-requirements": {
            "get": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.07. Получить список требований для паролей",
                "description": "Получить список требований для паролей",
                "operationId": "getPasswordRequirements",
                "responses": {
                    "200": {
                        "description": "Список требований для паролей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.PasswordRequirements.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login-by-external-token": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.08. Авторизация по внешнему JWT",
                "description": "Авторизация по внешнему JWT, выданному 'Академией Equeo'",
                "operationId": "authByExternalToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.LoginByExternalToken.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.Login.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "security": [],
                "tags": [
                    "Feedback"
                ],
                "summary": "03.01. Отправка сообщения в техподдержку",
                "description": "Отправка сообщения в техподдержку",
                "operationId": "sendFeedback",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback.NewTicket.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обращение создано успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при создании обращения",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "04.01. Получить профиль текущего пользователя",
                "description": "Получить профиль текущего пользователя",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Объект профиля пользователя",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users.Profile.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/competencies": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Competencies"
                ],
                "summary": "05.01. Получить список компетенций",
                "description": "Получить список компетенций",
                "operationId": "getCompetencies",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Competencies.Collection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список компетенций",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competencies.Collection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.01. Получить список целей",
                "description": "Получить список целей",
                "operationId": "getTargets",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.Collection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список целей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.Collection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.02. Получить детальную информацию о цели",
                "description": "Получить детальную информацию о цели",
                "operationId": "getTargetDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID цели",
                        "example": 512,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о цели",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.TargetDetails.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Base.Sort": {
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                        "example": "id"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Направление сортировки. Если не указано или указано некорректно, то будет использовано значение по умолчанию.",
                        "enum": ["asc", "desc"],
                        "example": "desc"
                    }
                }
            },
            "Base.Pagination": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Номер текущей страницы. Если не указан, то будет использовано значение по умолчанию - '1'.",
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "description": "Количество элементов на странице. Если не указано, то будет использовано значение по умолчанию.",
                        "example": 50
                    }
                }
            },
            "Base.PaginationMeta": {
                "type": "object",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "description": "Номер текущей страницы",
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "description": "Количество элементов на странице",
                        "example": 50
                    },
                    "total": {
                        "type": "integer",
                        "description": "Общее количество элементов",
                        "example": 123
                    }
                }
            },
            "Base.EmptySuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "boolean",
                                "enum": [true]
                            }
                        },
                        "required": ["success"]
                    }
                }
            },
            "Base.Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Код ошибки",
                        "example": "base.unknown_error"
                    },
                    "message": {
                        "type": "string",
                        "description": "Текст ошибки",
                        "nullable": true,
                        "example": "Unknown error"
                    },
                    "attribute": {
                        "type": "string",
                        "description": "Атрибут запроса, с которым связана ошибка",
                        "nullable": true,
                        "example": "login"
                    },
                    "stack_trace": {
                        "type": "string",
                        "description": "Stacktrace. Доступен только на тестовых окружениях",
                        "nullable": true
                    }
                },
                "required": ["code", "message"]
            },
            "Base.ErrorCollectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Base.Error"
                                }
                            }
                        }
                    }
                }
            },
            "Base.Configuration.Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "feature_flags": {
                                        "type": "object",
                                        "properties": {
                                            "remember_me": {
                                                "type": "boolean",
                                                "description": "Страница входа. Функция 'Запомнить меня'.",
                                                "example": true
                                            },
                                            "reset_password": {
                                                "type": "boolean",
                                                "description": "Страница входа. Функция 'Восстановить пароль'.",
                                                "example": true
                                            }
                                        }
                                    },
                                    "language_ids": {
                                        "type": "array",
                                        "description": "ID языка",
                                        "items": {
                                            "type": "string",
                                            "enum": ["ru", "en", "fr"],
                                            "example": "en"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Auth.Login.Request": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "Логин",
                        "example": "your_login"
                    },
                    "password": {
                        "type": "string",
                        "description": "Пароль",
                        "example": "your_password"
                    },
                    "company_id": {
                        "type": "integer",
                        "description": "ID компании",
                        "example": 123
                    }
                },
                "required": ["login", "password"]
            },
            "Auth.Login.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "access_token": {
                                        "type": "string",
                                        "description": "Access token. Используется для последующих запросов к API.",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cGUiOiJKV1QifQ.eyJpc3MiOiJpZHBfYm94X2F1dGhfc2VydmVyIiwic3ViIjoiZmlyc3RfdXNlciIsImV4cCI6MTY5MTc4NTg1NSwiaWF0IjoxNjkxNjk5NDU1fQ.jWFCQJ806fkwxQ555tu3lroCtJ7nxmhTkpj11IGBJpE"
                                    },
                                    "token_type": {
                                        "type": "string",
                                        "description": "Тип access token'а",
                                        "enum": ["bearer"],
                                        "example": "bearer"
                                    },
                                    "expires_in": {
                                        "type": "integer",
                                        "description": "Количество секунд, через которое access token перестанет быть активным",
                                        "example": 86400
                                    },
                                    "refresh_token": {
                                        "type": "string",
                                        "description": "Refresh token. Используется для обновления пары access token / refresh token.",
                                        "example": "G1O8jaQj4KyGOc3-fbrIF30j5eUU_kqs9O2qDXk1"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "ID компании",
                                        "example": 123
                                    }
                                },
                                "required": ["access_token", "token_type", "expires_in", "refresh_token", "company_id"]
                            }
                        }
                    }
                }
            },
            "Auth.RefreshToken.Request": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "description": "Refresh token",
                        "example": "G1O8jaQj4KyGOc3-fbrIF30j5eUU_kqs9O2qDXk1"
                    }
                },
                "required": ["refresh_token"]
            },
            "Auth.ResetPassword.ForgotPassword.Request": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "Логин",
                        "example": "your_login"
                    }
                },
                "required": ["login"]
            },
            "Auth.ResetPassword.ForgotPassword.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "transport": {
                                        "type": "string",
                                        "description": "Способ восстановления пароля",
                                        "enum": ["email"],
                                        "example": "email"
                                    },
                                    "token_lifetime": {
                                        "type": "string",
                                        "description": "Текстовое сообщение с временем жизни токена",
                                        "nullable": true,
                                        "example": "1 hour"
                                    }
                                },
                                "required": ["transport"]
                            }
                        }
                    }
                }
            },
            "Auth.ResetPassword.CheckToken.Request": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Токен, полученный из URL",
                        "example": "NDQStklU3VNpnlkp1i22kVVPe4QZxk0nkJi7llE0"
                    }
                },
                "required": ["token"]
            },
            "Auth.PasswordRequirement.AttributeMatch": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип правила",
                        "enum": ["attribute_match"],
                        "example": "attribute_match"
                    },
                    "use_login": {
                        "type": "boolean",
                        "description": "Может ли пароль совпадать с логином",
                        "example": false
                    },
                    "use_email": {
                        "type": "boolean",
                        "description": "Может ли пароль совпадать с email",
                        "example": false
                    },
                    "use_phone": {
                        "type": "boolean",
                        "description": "Может ли пароль совпадать с номером телефона",
                        "example": false
                    }
                },
                "required": ["type", "use_login", "use_email", "use_phone"]
            },
            "Auth.PasswordRequirement.Regexp": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип правила",
                        "enum": ["regexp"],
                        "example": "regexp"
                    },
                    "regexp": {
                        "type": "string",
                        "description": "Регулярное выражение для проверки пароля",
                        "example": "\\w{16}"
                    },
                    "hint": {
                        "type": "string",
                        "description": "Описание регулярного выражения",
                        "example": "Пароль должен содержать не менее 16 символов"
                    }
                },
                "required": ["type", "regexp", "hint"]
            },
            "Auth.PasswordRequirements.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/Auth.PasswordRequirement.Regexp"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Auth.PasswordRequirement.AttributeMatch"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Auth.ResetPassword.SaveNewPassword.Request": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Токен, полученный из URL",
                        "example": "NDQStklU3VNpnlkp1i22kVVPe4QZxk0nkJi7llE0"
                    },
                    "password": {
                        "type": "string",
                        "description": "Новый пароль",
                        "example": "your_new_password"
                    }
                },
                "required": ["token", "password"]
            },
            "Auth.ResetPassword.PasswordRequirement.Error": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Error"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "password_requirement": {
                                "type": "object",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Auth.PasswordRequirement.Regexp"
                                    },
                                    {
                                        "$ref": "#/components/schemas/Auth.PasswordRequirement.AttributeMatch"
                                    }
                                ]
                            }
                        },
                        "required": ["code", "message", "password_requirement"]
                    }
                ]
            },
            "Auth.ResetPassword.SaveNewPassword.ErrorCollectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/Base.Error"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Auth.ResetPassword.PasswordRequirement.Error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Auth.LoginByExternalToken.Request": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT, выданный 'Академией Equeo'",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cGUiOiJKV1QifQ.eyJpc3MiOiJlcXVlb19hdXRoX3NlcnZlciIsInN1YiI6IjJuZF91c2VyIiwiY29tcGFueV9pZCI6MSwiZXhwIjoxNjkyODkzMDQ3LCJpYXQiOjE2OTI4MDY2NDd9.3uuI7Hjb_5n1JFz36Uialz8PIc7hEMLTRh-83X3U7wA"
                    }
                },
                "required": ["token"]
            },
            "Feedback.NewTicket.Request": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Почта для ответа",
                        "example": "test@test.com"
                    },
                    "text": {
                        "type": "string",
                        "description": "Текст запроса",
                        "example": "Ничего не работает. Ничего не понятно."
                    }
                },
                "required": ["email", "text"]
            },
            "Users.Profile.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "ID",
                                        "example": 1024
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "ID компании",
                                        "example": 256
                                    },
                                    "login": {
                                        "type": "string",
                                        "description": "Логин",
                                        "example": "my_login"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "description": "Имя",
                                        "example": "Иван"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "Фамилия",
                                        "example": "Иванов"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Competencies.Competency.Base": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 64
                    },
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "My competency"
                    }
                }
            },
            "Competencies.Collection.Request": {
                "type": "object",
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/Base.Pagination"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Параметры для фильтрации коллекции",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Название компетенции",
                                "example": "My competency"
                            }
                        }
                    }
                }
            },
            "Competencies.Collection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Competencies.Competency.Base"
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.PaginationMeta"
                            }
                        }
                    }
                }
            },
            "Targets.Target.DetailView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 64
                    },
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "My target"
                    },
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": [
                            "approval",
                            "not_approved",
                            "not_started",
                            "in_progress",
                            "done"
                        ],
                        "example": "in_progress"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Приоритет",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "low"
                    },
                    "deadline": {
                        "type": "integer",
                        "description": "Крайний срок выполнения. Формат - timestamp.",
                        "example": 1693861388
                    },
                    "completion_percent": {
                        "type": "integer",
                        "description": "Процент прохождения",
                        "example": 75
                    },
                    "description": {
                        "type": "string",
                        "description": "Описание",
                        "example": "Some description"
                    }
                }
            },
            "Targets.Target.CollectionView": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Targets.Target.DetailView"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "competencies": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Competencies.Competency.Base"
                                }
                            }
                        }
                    }
                ]
            },
            "Targets.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["name", "created_at", "priority", "deadline"],
                                "example": "created_at"
                            }
                        }
                    }
                ]
            },
            "Targets.Collection.Request": {
                "type": "object",
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/Base.Pagination"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/Targets.Collection.Sort"
                    },
                    "filter": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "array",
                                "description": "Статус",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "approval",
                                        "not_approved",
                                        "not_started",
                                        "in_progress",
                                        "done"
                                    ],
                                    "example": "in_progress"
                                }
                            },
                            "priority": {
                                "type": "array",
                                "description": "Приоритет",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ],
                                    "example": "low"
                                }
                            },
                            "deadline": {
                                "type": "array",
                                "description": "Крайний срок",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "in_a_week",
                                        "overdue"
                                    ],
                                    "example": "overdue"
                                }
                            },
                            "competency_ids": {
                                "type": "array",
                                "description": "ID компетенций",
                                "items": {
                                    "type": "integer",
                                    "example": 256
                                }
                            }
                        }
                    }
                }
            },
            "Targets.Collection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Targets.Target.CollectionView"
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.PaginationMeta"
                            }
                        }
                    }
                }
            },
            "Targets.TargetDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Targets.Target.DetailView"
                            }
                        }
                    }
                }
            }
        },
        "parameters": {

        },
        "securitySchemes": {
            "bearerAuth": {
                "description": "Bearer authorization",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
