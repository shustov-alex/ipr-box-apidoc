{
    "openapi": "3.0.0",
    "info": {
        "title": "IDP Box",
        "description": "IDP Box API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.ipr.e-queo.xyz",
            "description": "Test server"
        }
    ],
    "tags": [
        {
            "name": "Base",
            "description": "01. Общие настройки"
        },
        {
            "name": "Auth",
            "description": "02. Аутенфикация"
        },
        {
            "name": "Feedback",
            "description": "03. Обратная связь"
        },
        {
            "name": "Users",
            "description": "04. Пользователи"
        },
        {
            "name": "Skills",
            "description": "05. Навыки"
        },
        {
            "name": "Targets",
            "description": "06. Цели"
        },
        {
            "name": "IDP",
            "description": "07. Индивидуальный план развития"
        },
        {
            "name": "Materials",
            "description": "08. Материалы"
        },
        {
            "name": "Employees",
            "description": "09. Сотрудники"
        },
        {
            "name": "Divisions",
            "description": "10. Организационная структура"
        },
        {
            "name": "Tasks",
            "description": "11. Асинхронные задачи"
        },
        {
            "name": "Files",
            "description": "12. Файлы"
        },
        {
            "name": "Notifications",
            "description": "13. Уведомления"
        },
        {
            "name": "Positions",
            "description": "14. Должности"
        },
        {
            "name": "AdminPanel.Users",
            "description": "15. Панель администратора, пользователи"
        },
        {
            "name": "AdminPanel.Materials",
            "description": "16. Панель администратора, материалы"
        },
        {
            "name": "AdminPanel.TargetTemplates",
            "description": "17. Панель администратора, шаблоны целей"
        },
        {
            "name": "AdminPanel.Companies",
            "description": "18. Панель администратора, список компаний"
        }
    ],
    "paths": {
        "/configuration/{company_sub_domain}": {
            "get": {
                "security": [],
                "tags": [
                    "Base"
                ],
                "summary": "01.01. Получить конфигурацию компании",
                "description": "Получить конфигурацию компании",
                "operationId": "companies.getConfiguration",
                "parameters": [
                    {"$ref": "#/components/parameters/Companies.Path.Company.SubDomain"}
                ],
                "responses": {
                    "200": {
                        "description": "Объект конфигурации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Companies.Configuration.Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Компания не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.01. Получение токенов по логину / паролю",
                "description": "Получение токенов по логину / паролю",
                "operationId": "auth.authByLoginAndPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.Login.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.Login.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "security": [],
                "summary": "02.02. Обновление токенов",
                "description": "Обновление токенов",
                "operationId": "auth.refreshPairOfTokens",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.RefreshToken.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обновление токенов прошло успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.Login.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка обновления токенов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "02.03. Выход из профиля авторизации",
                "description": "Выход из профиля авторизации",
                "operationId": "auth.logout",
                "responses": {
                    "200": {
                        "description": "Выход из профиля прошёл успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка выхода из профиля (пользователь не был авторизован)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password/forgot-password": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.04. Запрос на восстановление пароля",
                "description": "Запрос на восстановление пароля",
                "operationId": "auth.resetPasswordForgotPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.ResetPassword.ForgotPassword.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Письмо со ссылкой для восстановления пароля отправлено успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.ResetPassword.ForgotPassword.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при попытке восстановления пароля",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password/check-token": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.05. Проверка токена для восстановления пароля",
                "description": "Проверка токена для восстановления пароля",
                "operationId": "auth.resetPasswordCheckToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.ResetPassword.CheckToken.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Проверка выполнена успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при проверке кода",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password/save-new-password": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.06. Сохранение нового пароля",
                "description": "Сохранение нового пароля",
                "operationId": "auth.resetPasswordSaveNewPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.ResetPassword.SaveNewPassword.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пароль успешно сохранен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при сохранении пароля",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.ResetPassword.SaveNewPassword.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password-requirements": {
            "get": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.07. Получить список требований для паролей",
                "description": "Получить список требований для паролей",
                "operationId": "auth.getPasswordRequirements",
                "responses": {
                    "200": {
                        "description": "Список требований для паролей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.PasswordRequirements.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login-by-external-token": {
            "post": {
                "security": [],
                "tags": [
                    "Auth"
                ],
                "summary": "02.08. Авторизация по внешнему JWT",
                "description": "Авторизация по внешнему JWT, выданному 'Академией Equeo'",
                "operationId": "auth.authByExternalToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth.LoginByExternalToken.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth.Login.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "security": [],
                "tags": [
                    "Feedback"
                ],
                "summary": "03.01. Отправка сообщения в техподдержку",
                "description": "Отправка сообщения в техподдержку",
                "operationId": "feedback.sendFeedback",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback.NewTicket.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обращение создано успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при создании обращения",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "04.01. Получить профиль текущего пользователя",
                "description": "Получить профиль текущего пользователя",
                "operationId": "users.getProfile",
                "responses": {
                    "200": {
                        "description": "Объект профиля пользователя",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users.Profile.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/quick-search": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "04.02. Быстрый поиск пользователей.",
                "description": "Быстрый поиск пользователей.",
                "operationId": "users.quickSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.QuickSearch.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список найденных пользователей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users.QuickSearch.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/skills/tree": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Skills"
                ],
                "summary": "05.01. Получить дерево навыков",
                "description": "Получить дерево навыков",
                "operationId": "skills.getTree",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.GetTree.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Дерево навыков",
                        "content": {
                            "application/json": {
                                "example": {
                                    "data": {
                                        "success": [
                                            {
                                                "type": "competency_cluster",
                                                "id": 1,
                                                "parent_id": null,
                                                "name": "Специализированные компетенции",
                                                "children": [
                                                    {
                                                        "type": "competency",
                                                        "id": 10,
                                                        "parent_id": 1,
                                                        "name": "Исследование",
                                                        "children": [
                                                            {
                                                                "type": "skill",
                                                                "id": 100,
                                                                "parent_id": 10,
                                                                "name": "Формулирую цель исследования, понимая, как это мне поможет в дальнейшем дизайн-решении",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            },
                                                            {
                                                                "type": "skill",
                                                                "id": 101,
                                                                "parent_id": 10,
                                                                "name": "Формулирую продуктовые гипотезы, которые будут проверены на исследовании",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            },
                                                            {
                                                                "type": "skill",
                                                                "id": 102,
                                                                "parent_id": 10,
                                                                "name": "Подгатавливаю гайд для проведения исследования",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            },
                                                            {
                                                                "type": "skill",
                                                                "id": 103,
                                                                "parent_id": 10,
                                                                "name": "Могу провести глубинное интервью целевой аудитории",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "competency",
                                                        "id": 11,
                                                        "parent_id": 1,
                                                        "name": "Проектирование",
                                                        "children": [
                                                            {
                                                                "type": "skill",
                                                                "id": 110,
                                                                "parent_id": 11,
                                                                "name": "Какой-то навык, ID 110",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            },
                                                            {
                                                                "type": "skill",
                                                                "id": 111,
                                                                "parent_id": 11,
                                                                "name": "Какой-то навык, ID 111",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "competency_cluster",
                                                "id": 2,
                                                "parent_id": null,
                                                "name": "Общие компетенции",
                                                "children": [
                                                    {
                                                        "type": "competency",
                                                        "id": 20,
                                                        "parent_id": 2,
                                                        "name": "Какая-то компетенция, ID 20",
                                                        "children": [
                                                            {
                                                                "type": "skill",
                                                                "id": 200,
                                                                "parent_id": 20,
                                                                "name": "Какой-то навык, ID 200",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            },
                                                            {
                                                                "type": "skill",
                                                                "id": 201,
                                                                "parent_id": 20,
                                                                "name": "Какой-то навык, ID 201",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "competency",
                                                        "id": 21,
                                                        "parent_id": 2,
                                                        "name": "Какая-то компетенция, ID 21",
                                                        "children": [
                                                            {
                                                                "type": "skill",
                                                                "id": 210,
                                                                "parent_id": 21,
                                                                "name": "Какой-то навык, ID 210",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            },
                                                            {
                                                                "type": "skill",
                                                                "id": 211,
                                                                "parent_id": 21,
                                                                "name": "Какой-то навык, ID 211",
                                                                "current_level_indicator_id": 1,
                                                                "required_level_indicator_id": 5,
                                                                "children": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Skills.Tree.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/skills/{skill_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Skills"
                ],
                "summary": "05.02. Получить детальную информацию о навыке",
                "description": "Получить детальную информацию о навыке",
                "operationId": "skills.getSkillDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/Skills.Path.Skill.Id"},
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о навыке",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Skills.SkillDetails.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/skills/{skill_id}/brief": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Skills"
                ],
                "summary": "05.03. Получить краткую информацию о навыке",
                "description": "Получить краткую информацию о навыке",
                "operationId": "skills.getSkillDetailsBrief",
                "parameters": [
                    {"$ref": "#/components/parameters/Skills.Path.Skill.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Краткая информация о навыке",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Skills.SkillDetailsBrief.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/skills/level-indicators": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Skills"
                ],
                "summary": "05.04. Получить все возможные индикаторы навыков",
                "description": "Получить все возможные индикаторы навыков",
                "operationId": "skills.getLevelIndicators",
                "responses": {
                    "200": {
                        "description": "Список индикаторов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Skills.LevelIndicators.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.01. Получить список целей",
                "description": "Получить список целей. Максимальное количество элементов - 1000.",
                "operationId": "targets.getCollection",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.Collection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список целей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.Collection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.02. Получить детальную информацию о цели",
                "description": "Получить детальную информацию о цели",
                "operationId": "targets.getTargetDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о цели",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.TargetDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/update-status": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.03. Обновить статус цели",
                "description": "Обновить статус цели",
                "operationId": "targets.updateStatus",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.UpdateStatus.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Статус изменён успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки обновления статуса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/status-groups": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.04. Получить группы статусов целей",
                "description": "Получить группы статусов целей",
                "operationId": "targets.getStatusGroups",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.GetStatusGroups.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Группы статусов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.GetStatusGroups.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.05. Создать цель",
                "description": "Создать цель",
                "operationId": "targets.createTarget",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.Target.ToCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Цель создана успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.06. Обновить цель",
                "description": "Обновить цель",
                "operationId": "targets.updateTarget",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.Target.ToUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Цель обновлена успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при обновлении цели",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/delete": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.07. Удалить цель",
                "description": "Удалить цель",
                "operationId": "targets.deleteTarget",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Цель удалена успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/count-of-relations": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.08. Получить количество связанных объектов",
                "description": "Получить количество связанных объектов",
                "operationId": "targets.getCountOfRelations",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Количество связанных объектов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.CountOfRelations.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/skills": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.09. Получить выбранные навыки по ID цели",
                "description": "Получить выбранные навыки по ID цели",
                "operationId": "targets.getTargetSkills",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список навыков",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.TargetSkills.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/materials": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.10. Получить выбранные материалы по ID цели",
                "description": "Получить выбранные материалы по ID цели",
                "operationId": "targets.getTargetMaterials",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.TargetMaterials.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/materials/{material_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.11. Получить выбранный материал по ID цели и ID материала",
                "description": "Получить выбранные материалы по ID цели",
                "operationId": "targets.getTargetMaterial",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"},
                    {"$ref": "#/components/parameters/Materials.Path.Material.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.TargetMaterial.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/comments": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.12. Получить комментарии по ID цели",
                "description": "Получить комментарии по ID цели",
                "operationId": "targets.getTargetComments",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список комментариев",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Targets.TargetComments.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/comments/leave": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.13. Оставить комментарий к цели",
                "description": "Оставить комментарий к цели",
                "operationId": "targets.leaveCommentOnTarget",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.LeaveCommentOnTarget.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список комментариев",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при оставлении комментария",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/create-collection": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.14. Создать несколько целей",
                "description": "Создать несколько целей",
                "operationId": "targets.createTargetCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.Target.ToCreateCollection"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Цели созданы успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/materials/{material_id}/update-assignment-status": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.15. Обновить статус назначения материала",
                "description": "Обновить статус назначения материала",
                "operationId": "targets.updateAssignmentStatus",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"},
                    {"$ref": "#/components/parameters/Materials.Path.Material.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.UpdateAssignmentStatus.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Статус успешно обновлен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки при обновлении статуса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/targets/{target_id}/update-percent": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "06.16. Обновить процент цели",
                "description": "Обновить процент цели",
                "operationId": "targets.updatePercent",
                "parameters": [
                    {"$ref": "#/components/parameters/Targets.Path.Target.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Targets.UpdatePercent.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Процент изменён успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки обновления процента",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.01. Коллекция доступных сотруднику ИПР",
                "description": "Коллекция доступных сотруднику ИПР",
                "operationId": "idp.getCollection",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список ИПР",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetIdpCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/default-route": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.02. Получить маршрут по умолчанию",
                "description": "Получить маршрут по умолчанию",
                "operationId": "idp.getDefaultRoute",
                "responses": {
                    "200": {
                        "description": "Согласование, маршрут по умолчанию",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetDefaultRoute.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.03. Получить детальную информацию об ИПР",
                "description": "Получить детальную информацию об ИПР. Атрибуы count_of_targets, count_of_targets_done, price будут включены в ответ только если были указаны в query-параметре extra_attributes.",
                "operationId": "idp.getIdpDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"},
                    {"$ref": "#/components/parameters/Base.Query.ExtraAttributes"}
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация об ИПР",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetIdpDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/access-rights": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.04. Получить список прав по работе с ИПР",
                "description": "Получить список прав по работе с ИПР. В ответ также будут включены права по работе с последней попыткой (если такая есть).",
                "operationId": "idp.getIdpAccessRights",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список прав по работе с ИПР",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetIdpAccessRights.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.05. Получить список попыток согласования ИПР",
                "description": "Получить список попыток согласования ИПР",
                "operationId": "idp.getApprovalAttempts",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.GetApprovalAttempts.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список попыток согласования",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetApprovalAttempts.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts/start": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.06. Запуск согласования",
                "description": "Запуск согласования",
                "operationId": "idp.startApprovalAttempt",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.StartApprovalAttempt.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Согласование успешно запущено",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts/{attempt_id}/cancel": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.07. Отмена согласования",
                "description": "Отмена согласования. Выполняется инициатором.",
                "operationId": "idp.cancelApprovalAttempt",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"},
                    {"$ref": "#/components/parameters/Idp.Path.ApprovalAttempt.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Согласование успешно отменено",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts/{attempt_id}/approve": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.08. Согласовать этап маршрута",
                "description": "Согласовать этап маршрута. Если согласующий (авторизованный пользователь) присутствует в нескольких этапах, то будет обработан первый из несогласованных.",
                "operationId": "idp.approveStage",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"},
                    {"$ref": "#/components/parameters/Idp.Path.ApprovalAttempt.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.ApproveStageOrNot.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Согласование этапа прошло успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts/{attempt_id}/reject": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.09. Отказать в согласовании этапа",
                "description": "Отказать в согласовании этапа. Если согласующий (авторизованный пользователь) присутствует в нескольких этапах, то будет обработан первый из несогласованных.",
                "operationId": "idp.rejectStage",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"},
                    {"$ref": "#/components/parameters/Idp.Path.ApprovalAttempt.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.ApproveStageOrNot.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Отказ в согласовании прошёл успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts/{attempt_id}/update-route": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.10. Обновить маршрут согласования.",
                "description": "Обновить маршрут согласования.",
                "operationId": "idp.updateApprovalAttemptRoute",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"},
                    {"$ref": "#/components/parameters/Idp.Path.ApprovalAttempt.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.UpdateAttemptRoute.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Маршрут успешно обновлён. Возвращается объект попытки.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.UpdateAttemptRoute.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/attempts/{attempt_id}/access-rights": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.11. Получить список прав по работе с попыткой",
                "description": "Получить список прав по работе с попыткой",
                "operationId": "idp.getAttemptAccessRights",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"},
                    {"$ref": "#/components/parameters/Idp.Path.ApprovalAttempt.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список прав по работе с попыткой",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetAttemptAccessRights.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/approval/approvers/search": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.12. Поиск согласующих.",
                "description": "Поиск согласующих.",
                "operationId": "idp.searchForApprovers",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.SearchForApprovers.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список найденных пользователей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.SearchForApprovers.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/years-of-all-employees": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.13. Получить все возможные года, которые есть в ИПР сотрудников",
                "description": "Получить все возможные года, которые есть в ИПР сотрудников",
                "operationId": "idp.getYearsOfAllEmployees",
                "responses": {
                    "200": {
                        "description": "Года ИПР",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GetYearsOfAllEmployees.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.14. Создать ИПР",
                "description": "Создать ИПР",
                "operationId": "idp.createIdp",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Query.Employee.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.Idp.ToCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ИПР успешно создан",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.CreateIdp.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/{idp_id}/delete": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.15. Удалить ИПР",
                "description": "Удалить ИПР",
                "operationId": "idp.deleteIdp",
                "parameters": [
                    {"$ref": "#/components/parameters/Idp.Path.Idp.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "ИПР успешно удалён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/create-collection": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.16. Создать несколько ИПР",
                "description": "Создать несколько ИПР",
                "operationId": "idp.massCreateIdp",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.IdpCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Коллекция ИПР успешно создана",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/check-if-approval-is-available": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.17. Можно ли согласовать ИПР для нескольких сотрудников",
                "description": "Можно ли согласовать ИПР для нескольких сотрудников",
                "operationId": "idp.checkIfApprovalIsAvailable",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.IdpCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список ID сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.Idp.CheckIfAttemptActionIsAvailable.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/approve-collection": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.18. Согласовать ИПР для нескольких сотрудников",
                "description": "Согласовать ИПР для нескольких сотрудников",
                "operationId": "idp.approveCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.IdpCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Объект асинхронной задачи, в рамках которой будет проходить согласование ИПР",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.IdpCollection.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/check-if-rejection-is-available": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.19. Можно ли отправить на доработку ИПР для нескольких сотрудников",
                "description": "Можно ли отправить на доработку ИПР для нескольких сотрудников",
                "operationId": "idp.checkIfRejectionIsAvailable",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.IdpCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список ID сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.Idp.CheckIfAttemptActionIsAvailable.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/reject-collection": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.20. Отправить на доработку ИПР для нескольких сотрудников",
                "description": "Отправить на доработку ИПР для нескольких сотрудников",
                "operationId": "idp.rejectCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.IdpCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ИПР будут отправлены на доработку в ближайшее время",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/idp/generate-reports": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "IDP"
                ],
                "summary": "07.21. Сформировать отчёты",
                "description": "Сформировать отчёты",
                "operationId": "idp.generateReports",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Idp.GenerateReports.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Запрос на формирование отчётов принят",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Idp.GenerateReports.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/tree": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "08.01. Получить дерево каталогов и материалов",
                "description": "Дерево каталогов и материалов. У каталогв могут быть дочерние элементы, у материала - нет. Если на одном уровне располагаются и каталоги, и материалы, то каталоги всегда расположены первыми.",
                "operationId": "materials.getTree",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.GetTree.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Дерево каталогов и материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.getTree.SuccessResponse"
                                },
                                "example": {
                                    "data": {
                                        "success": [
                                            {
                                                "entity_type": "material_directory",
                                                "id": 501,
                                                "parent_id": null,
                                                "name": "Кондитерское производство",
                                                "children": [
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 502,
                                                        "parent_id": 501,
                                                        "name": "Шоколад",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 503,
                                                                "parent_id": 502,
                                                                "name": "Темперирование",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 4,
                                                                        "name": "Документооборот"
                                                                    },
                                                                    {
                                                                        "id": 25,
                                                                        "name": "Видение целого"
                                                                    },
                                                                    {
                                                                        "id": 26,
                                                                        "name": "Взаимозависимость"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 504,
                                                                "parent_id": 502,
                                                                "name": "Формовка",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 7,
                                                                        "name": "Презентации"
                                                                    },
                                                                    {
                                                                        "id": 18,
                                                                        "name": "Расстановка приоритетов"
                                                                    },
                                                                    {
                                                                        "id": 25,
                                                                        "name": "Видение целого"
                                                                    },
                                                                    {
                                                                        "id": 26,
                                                                        "name": "Взаимозависимость"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 505,
                                                        "parent_id": 501,
                                                        "name": "Карамель",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 506,
                                                                "parent_id": 505,
                                                                "name": "Варка карамели",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 6,
                                                                        "name": "Публичные выступления"
                                                                    },
                                                                    {
                                                                        "id": 29,
                                                                        "name": "Гибкость мышления"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "entity_type": "material_directory",
                                                "id": 507,
                                                "parent_id": null,
                                                "name": "Производство напитков",
                                                "children": [
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 508,
                                                        "parent_id": 507,
                                                        "name": "Производство соков",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 509,
                                                                "parent_id": 508,
                                                                "name": "Экстракция сока",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 10,
                                                                        "name": "Эмпатия"
                                                                    },
                                                                    {
                                                                        "id": 25,
                                                                        "name": "Видение целого"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 510,
                                                                "parent_id": 508,
                                                                "name": "Фильтрация сока",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 10,
                                                                        "name": "Эмпатия"
                                                                    },
                                                                    {
                                                                        "id": 16,
                                                                        "name": "Календарное планирование"
                                                                    },
                                                                    {
                                                                        "id": 23,
                                                                        "name": "Оценка аргументов"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 511,
                                                        "parent_id": 507,
                                                        "name": "Производство безалкогольных напитков",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 512,
                                                                "parent_id": 511,
                                                                "name": "Сиропы",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 16,
                                                                        "name": "Календарное планирование"
                                                                    },
                                                                    {
                                                                        "id": 19,
                                                                        "name": "Тайм-боксинг"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 513,
                                                                "parent_id": 511,
                                                                "name": "Газирование",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 16,
                                                                        "name": "Календарное планирование"
                                                                    },
                                                                    {
                                                                        "id": 28,
                                                                        "name": "Генерация идей"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "entity_type": "material_directory",
                                                "id": 514,
                                                "parent_id": null,
                                                "name": "Пищевая химия",
                                                "children": [
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 515,
                                                        "parent_id": 514,
                                                        "name": "Пищевые добавки",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 516,
                                                                "parent_id": 515,
                                                                "name": "Консерванты",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 11,
                                                                        "name": "Активное слушание"
                                                                    },
                                                                    {
                                                                        "id": 12,
                                                                        "name": "Убеждение"
                                                                    },
                                                                    {
                                                                        "id": 18,
                                                                        "name": "Расстановка приоритетов"
                                                                    },
                                                                    {
                                                                        "id": 22,
                                                                        "name": "Анализ данных"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 517,
                                                                "parent_id": 515,
                                                                "name": "Красители",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 10,
                                                                        "name": "Эмпатия"
                                                                    },
                                                                    {
                                                                        "id": 29,
                                                                        "name": "Гибкость мышления"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 518,
                                                        "parent_id": 514,
                                                        "name": "Пищевые ингредиенты",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 519,
                                                                "parent_id": 518,
                                                                "name": "Углеводы",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 4,
                                                                        "name": "Документооборот"
                                                                    },
                                                                    {
                                                                        "id": 19,
                                                                        "name": "Тайм-боксинг"
                                                                    },
                                                                    {
                                                                        "id": 28,
                                                                        "name": "Генерация идей"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 520,
                                                                "parent_id": 518,
                                                                "name": "Жиры",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 8,
                                                                        "name": "Переговоры"
                                                                    },
                                                                    {
                                                                        "id": 23,
                                                                        "name": "Оценка аргументов"
                                                                    },
                                                                    {
                                                                        "id": 25,
                                                                        "name": "Видение целого"
                                                                    },
                                                                    {
                                                                        "id": 29,
                                                                        "name": "Гибкость мышления"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "entity_type": "material_directory",
                                                "id": 521,
                                                "parent_id": null,
                                                "name": "Производственный контроль",
                                                "children": [
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 522,
                                                        "parent_id": 521,
                                                        "name": "Контроль сырья",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 523,
                                                                "parent_id": 522,
                                                                "name": "Органолептика",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 3,
                                                                        "name": "Деловая переписка"
                                                                    },
                                                                    {
                                                                        "id": 23,
                                                                        "name": "Оценка аргументов"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 524,
                                                                "parent_id": 522,
                                                                "name": "Лабораторные методы",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 8,
                                                                        "name": "Переговоры"
                                                                    },
                                                                    {
                                                                        "id": 18,
                                                                        "name": "Расстановка приоритетов"
                                                                    },
                                                                    {
                                                                        "id": 28,
                                                                        "name": "Генерация идей"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 525,
                                                        "parent_id": 521,
                                                        "name": "Контроль производства",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 526,
                                                                "parent_id": 525,
                                                                "name": "Контроль температуры",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 6,
                                                                        "name": "Публичные выступления"
                                                                    },
                                                                    {
                                                                        "id": 7,
                                                                        "name": "Презентации"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 527,
                                                                "parent_id": 525,
                                                                "name": "Контроль влажности",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 12,
                                                                        "name": "Убеждение"
                                                                    },
                                                                    {
                                                                        "id": 26,
                                                                        "name": "Взаимозависимость"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "entity_type": "material_directory",
                                                "id": 528,
                                                "parent_id": null,
                                                "name": "Продвижение продукции",
                                                "children": [
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 529,
                                                        "parent_id": 528,
                                                        "name": "Маркетинг",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 530,
                                                                "parent_id": 529,
                                                                "name": "Опросы",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 6,
                                                                        "name": "Публичные выступления"
                                                                    },
                                                                    {
                                                                        "id": 11,
                                                                        "name": "Активное слушание"
                                                                    },
                                                                    {
                                                                        "id": 12,
                                                                        "name": "Убеждение"
                                                                    },
                                                                    {
                                                                        "id": 22,
                                                                        "name": "Анализ данных"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 531,
                                                                "parent_id": 529,
                                                                "name": "Фокус-группы",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 10,
                                                                        "name": "Эмпатия"
                                                                    },
                                                                    {
                                                                        "id": 15,
                                                                        "name": "Планирование задач"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 532,
                                                                "parent_id": 529,
                                                                "name": "Брендинг",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 10,
                                                                        "name": "Эмпатия"
                                                                    },
                                                                    {
                                                                        "id": 29,
                                                                        "name": "Гибкость мышления"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "entity_type": "material_directory",
                                                        "id": 533,
                                                        "parent_id": 528,
                                                        "name": "Реклама",
                                                        "children": [
                                                            {
                                                                "entity_type": "material",
                                                                "id": 534,
                                                                "parent_id": 533,
                                                                "name": "Билборды",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 4,
                                                                        "name": "Документооборот"
                                                                    },
                                                                    {
                                                                        "id": 11,
                                                                        "name": "Активное слушание"
                                                                    },
                                                                    {
                                                                        "id": 23,
                                                                        "name": "Оценка аргументов"
                                                                    },
                                                                    {
                                                                        "id": 25,
                                                                        "name": "Видение целого"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "entity_type": "material",
                                                                "id": 535,
                                                                "parent_id": 533,
                                                                "name": "Транзитная реклама",
                                                                "is_paid": false,
                                                                "skills": [
                                                                    {
                                                                        "id": 6,
                                                                        "name": "Публичные выступления"
                                                                    },
                                                                    {
                                                                        "id": 19,
                                                                        "name": "Тайм-боксинг"
                                                                    },
                                                                    {
                                                                        "id": 26,
                                                                        "name": "Взаимозависимость"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/{material_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "08.02. Получить детальную информацию о материале",
                "description": "Получить детальную информацию о материале",
                "operationId": "materials.getMaterialDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/Materials.Path.Material.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о материале",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.MaterialDetails.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/by-skills": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "08.03. Получить список материалов по ID навыков.",
                "description": "Получить список материалов по ID навыков.",
                "operationId": "materials.getBySkills",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Materials.CollectionBySkills.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.CollectionBySkills.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/validate": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "08.04. Валидация материала.",
                "description": "Валидация материала.",
                "operationId": "materials.validateMaterial",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Materials.ManualMaterialToValidate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Валидация прошла успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/types": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "08.05. Список возможных типов материалов",
                "description": "Список возможных типов материалов",
                "operationId": "materials.getTypes",
                "responses": {
                    "200": {
                        "description": "Список типов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.GetTypeCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/sources": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "08.06. Список возможных источников материалов",
                "description": "Список возможных источников материалов",
                "operationId": "materials.getSources",
                "responses": {
                    "200": {
                        "description": "Список истоничков",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.GetSourceCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employees": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "09.01. Получить список сотрудников",
                "description": "Получить список сотрудников",
                "operationId": "employees.getCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Employees.Collection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employees.Collection.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employees/count": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "09.02. Получить количество сотрудников",
                "description": "Получить количество сотрудников",
                "operationId": "employees.getCount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Employees.Count.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employees.Count.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employees/{employee_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "09.03. Получить краткую информацию о сотруднике",
                "description": "Получить краткую информацию о сотруднике. Атрибуты idps, position будут включены в ответ только если были указаны в query-параметре extra_attributes.",
                "operationId": "employees.getEmployeeBriefDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/Employees.Path.Employee.Id"},
                    {"$ref": "#/components/parameters/Base.Query.ExtraAttributes"}
                ],
                "responses": {
                    "200": {
                        "description": "Краткая информация о сотруднике",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employees.EmployeeBriefDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employees/quick-search": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "09.04. Быстрый поиск сотрудников.",
                "description": "Быстрый поиск сотрудников.",
                "operationId": "employees.quickSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.QuickSearch.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список найденных сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employees.QuickSearch.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employees/quick-search-extended": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "09.05. Расширенная версия быстрого поиска сотрудников",
                "description": "Расширенная версия быстрого поиска сотрудников",
                "operationId": "employees.quickSearchExtended",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.QuickSearch.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список найденных сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employees.QuickSearchExtended.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/divisions/tree": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Divisions"
                ],
                "summary": "10.01. Получить дерево элементов орг. структуры",
                "description": "Получить дерево элементов орг. структуры",
                "operationId": "divisions.getTree",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.GetTree.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Дерево элементов орг. структуры",
                        "content": {
                            "application/json": {
                                "example": {
                                    "data": {
                                        "success": [
                                            {
                                                "id": 1,
                                                "parent_id": null,
                                                "name": "ООО Группа компаний 1",
                                                "children": [
                                                    {
                                                        "id": 10,
                                                        "parent_id": 1,
                                                        "name": "Департамент 1.1",
                                                        "children": [
                                                            {
                                                                "id": 100,
                                                                "parent_id": 10,
                                                                "name": "Подразделение 1.1.1"
                                                            },
                                                            {
                                                                "id": 101,
                                                                "parent_id": 10,
                                                                "name": "Подразделение 1.1.2"
                                                            },
                                                            {
                                                                "id": 102,
                                                                "parent_id": 10,
                                                                "name": "Подразделение 1.1.3"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "id": 11,
                                                        "parent_id": 1,
                                                        "name": "Департамент 1.2",
                                                        "children": [
                                                            {
                                                                "id": 110,
                                                                "parent_id": 11,
                                                                "name": "Подразделение 1.2.1"
                                                            },
                                                            {
                                                                "id": 111,
                                                                "parent_id": 11,
                                                                "name": "Подразделение 1.2.2"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 2,
                                                "parent_id": null,
                                                "name": "ООО Группа компаний 2",
                                                "children": [
                                                    {
                                                        "id": 20,
                                                        "parent_id": 2,
                                                        "name": "Департамент 2.1",
                                                        "children": [
                                                            {
                                                                "id": 200,
                                                                "parent_id": 20,
                                                                "name": "Подразделение 2.1.1"
                                                            },
                                                            {
                                                                "id": 201,
                                                                "parent_id": 20,
                                                                "name": "Подразделение 2.1.2"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "id": 21,
                                                        "parent_id": 2,
                                                        "name": "Департамент 2.2",
                                                        "children": [
                                                            {
                                                                "id": 210,
                                                                "parent_id": 21,
                                                                "name": "Подразделение 2.2.1"
                                                            },
                                                            {
                                                                "id": 211,
                                                                "parent_id": 21,
                                                                "name": "Подразделение 2.2.2"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Divisions.Tree.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "11.01. Получить список асинхронных задач",
                "description": "Получить список асинхронных задач",
                "operationId": "tasks.getCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tasks.Collection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список асинхронных задач",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasks.Collection.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "11.02. Очистить список асинхронных задач",
                "description": "Очистить список асинхронных задач",
                "operationId": "tasks.deleteAll",
                "responses": {
                    "200": {
                        "description": "Список успешно очищен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{task_id}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "11.03. Скрыть асинхронную задачу из списка",
                "description": "Скрыть асинхронную задачу из списка",
                "operationId": "tasks.deleteOne",
                "parameters": [
                    {"$ref": "#/components/parameters/Tasks.Path.Task.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Задача успешно скрыта",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/long-poll": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "11.04. Запросить статус асинхронных задач",
                "description": "Запросить статус асинхронных задач. Если хотя бы одна из задач, ID которых передан в теле запроса, находится в процессе исполнения, то backend будет ждать её завершения. Timeout ожидания - 30 секунд.",
                "operationId": "tasks.longPoll",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tasks.LongPoll.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список асинхронных задач",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasks.Collection.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{task_id}/error-details": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "11.05. Получить список подробных ошибок",
                "description": "Получить список подробных ошибок",
                "operationId": "tasks.getErrorDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/Tasks.Path.Task.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Список подробных ошибок",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasks.GetErrorDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{file_id}/download": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Files"
                ],
                "summary": "12.01. Скачать файл",
                "description": "Скачать файл",
                "operationId": "files.downloadOne",
                "parameters": [
                    {"$ref": "#/components/parameters/Files.Path.File.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Содержимое файла",
                        "content": {
                            "application/vnd.ms-excel": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/config": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "13.01. Получить настройки уведомлений",
                "description": "Получить настройки уведомлений.",
                "operationId": "notifications.getConfig",
                "responses": {
                    "200": {
                        "description": "Настройки уведомлений",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications.GetConfig.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "13.02. Сохранить настройки уведомлений",
                "description": "Сохранить настройки уведомлений",
                "operationId": "notifications.saveConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notifications.SaveConfig.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Настройки успешно сохранены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/positions/quick-search": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "14.01. Быстрый поиск должностей.",
                "description": "Быстрый поиск должностей.",
                "operationId": "positions.quickSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.QuickSearch.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список найденных должностей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Positions.QuickSearch.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/roles": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.01. Список всех ролей в системе",
                "description": "Список всех ролей в системе",
                "operationId": "adminPanel.Users.getRoles",
                "responses": {
                    "200": {
                        "description": "Список ролей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Roles.GetCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/sources": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.02. Список возможных источников пользователей",
                "description": "Список возможных источников пользователей",
                "operationId": "adminPanel.Users.getSources",
                "responses": {
                    "200": {
                        "description": "Список источников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.UserSources.GetCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.03. Получить список пользователей",
                "description": "Получить список пользователей (аккаунты + сотрудники)",
                "operationId": "adminPanel.Users.getUsers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Users.GetCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Users.GetCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/archive": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.04. Архивировать аккаунты и связанных с ними сотрудников",
                "description": "Архивировать аккаунты и связанных с ними сотрудников",
                "operationId": "adminPanel.Users.archiveUsers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Users.ArchiveCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Аккаунты и сотрудники успешно отправлены в архив",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/restore": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.05. Восстановить из архива аккаунты и связанных с ними сотрудников",
                "description": "Восстановить из архива аккаунты и связанных с ними сотрудников",
                "operationId": "adminPanel.Users.restoreUsers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Users.RestoreCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Аккаунты и сотрудники успешно восстановлены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.06. Создать пользователя (аккаунт + сотрудник)",
                "description": "Создать пользователя (аккаунт + сотрудник)",
                "operationId": "adminPanel.Users.createUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Users.CreateUser.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Подробная информация о пользователе",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Users.GetUserDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/import": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.07. Импортировать пользователей",
                "description": "Импортировать пользователей из xlsx-файла",
                "operationId": "adminPanel.Users.importUsers",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Users.ImportCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Объект асинхронной задачи, в рамках которой будет проходить импорт пользователей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Users.ImportCollection.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/import/template": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.08. Скачать шаблон для импорта пользователей",
                "description": "Скачать шаблон для импорта пользователей",
                "operationId": "adminPanel.Users.getTemplateToImportUsers",
                "responses": {
                    "200": {
                        "description": "xlsx-файл",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{user_id}/details": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.09. Получить подробную информацию о пользователе (аккаунт + сотрудник)",
                "description": "Получить подробную информацию о пользователе (аккаунт + сотрудник)",
                "operationId": "adminPanel.Users.getUserDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.User.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Подробная информация о пользователе",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Users.GetUserDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{user_id}/details/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Users"
                ],
                "summary": "15.10. Обновить пользователя (аккаунт + сотрудник)",
                "description": "Обновить пользователя (аккаунт + сотрудник). Ни один из атрибутов не является обязательным. Если обновление атрибута не требуется, то его можно не указывать.",
                "operationId": "adminPanel.Users.updateUserDetails",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.User.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Users.UpdateUserDetails.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Подробная информация о пользователе",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Users.GetUserDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/types": {
            "get": {
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.01. Список возможных типов материалов",
                "description": "Список возможных типов материалов",
                "operationId": "adminPanel.Materials.getTypes",
                "responses": {
                    "200": {
                        "description": "Список типов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.GetTypeCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/sources": {
            "get": {
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.02. Список возможных источников материалов",
                "description": "Список возможных источников материалов",
                "operationId": "adminPanel.Materials.getSources",
                "responses": {
                    "200": {
                        "description": "Список истоничков",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Materials.GetSourceCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/count-of-awaiting-publication": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.03. Количество материалов, которые ожидают публикации",
                "description": "Количество материалов, которые ожидают публикации",
                "operationId": "adminPanel.Materials.getCountOfAwaitingPublication",
                "responses": {
                    "200": {
                        "description": "Количество материалов, которые ожидают публикации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.04. Получить список каталогов и материалов",
                "description": "Получить список каталогов и материалов. Атрибуты 'count_of_assignments' и 'can_assignment_status_be_changed' возвращаются только для опубликованных и архивных материалов.",
                "operationId": "adminPanel.Materials.getCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.GetCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список каталогов и материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.GetCollection.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/publish": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.05. Опубликовать материалы",
                "description": "Опубликовать материалы",
                "operationId": "adminPanel.Materials.publishCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.ObjectIdsAndDirectoryIdRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество опубликованных материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/archive": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.06. Архивировать материалы",
                "description": "Архивировать материалы",
                "operationId": "adminPanel.Materials.archiveCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.ObjectIdsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество заархивированных материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/delete": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.07. Удалить материалы",
                "description": "Удалить материалы",
                "operationId": "adminPanel.Materials.deleteCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.ObjectIdsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество удалённых материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/move": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.08. Переместить каталоги и материалы",
                "description": "Переместить каталоги и материалы",
                "operationId": "adminPanel.Materials.moveCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.ObjectIdsAndDirectoryIdRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество перемещенных объектов (каталоги + материалы)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/import": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.09. Импортировать материалы",
                "description": "Импортировать материалы из xlsx-файла",
                "operationId": "adminPanel.Materials.importMaterials",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.ImportMaterials.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Объект асинхронной задачи, в рамках которой будет проходить импорт",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.ImportMaterials.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/import/template": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.10. Скачать шаблон для импорта материалов",
                "description": "Скачать шаблон для импорта материалов",
                "operationId": "adminPanel.Materials.getTemplateToImportMaterials",
                "responses": {
                    "200": {
                        "description": "xlsx-файл",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.11. Создать материал",
                "description": "Создать материал",
                "operationId": "adminPanel.Materials.createMaterial",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.CreateMaterial.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Подробная информация о материале",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.GetMaterialDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/{material_id}/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.12. Обновить материал",
                "description": "Обновить материал",
                "operationId": "adminPanel.Materials.updateMaterial",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.Material.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.UpdateMaterial.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Подробная информация о материале",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.GetMaterialDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/{material_id}/assignments": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.13. Получить список назначений материала",
                "description": "Получить список назначений материала",
                "operationId": "adminPanel.Materials.getAssignmentCollection",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.Material.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.GetAssignmentCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список назначений",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.GetAssignmentCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/{material_id}/assignments/update-status": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.14. Обновить статусы назначений",
                "description": "Обновить статусы назначений",
                "operationId": "adminPanel.Materials.updateAssignmentStatuses",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.Material.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.UpdateAssignmentStatuses.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество успешно обновлённых элементов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/directories/tree": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.15. Получить дерево каталогов",
                "description": "Получить дерево каталогов",
                "operationId": "adminPanel.Materials.getTreeOfDirectories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Base.GetTree.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Дерево каталогов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.TreeOfDirectories.SuccessResponse"
                                },
                                "example": {
                                    "data": {
                                        "success": [
                                            {
                                                "id": 137,
                                                "parent_id": null,
                                                "name": "Кондитерское производство",
                                                "children": [
                                                    {
                                                        "id": 138,
                                                        "parent_id": 137,
                                                        "name": "Шоколад",
                                                        "children": []
                                                    },
                                                    {
                                                        "id": 141,
                                                        "parent_id": 137,
                                                        "name": "Карамель",
                                                        "children": []
                                                    },
                                                    {
                                                        "id": 143,
                                                        "parent_id": 137,
                                                        "name": "Производство напитков",
                                                        "children": [
                                                            {
                                                                "id": 144,
                                                                "parent_id": 143,
                                                                "name": "Производство соков",
                                                                "children": []
                                                            },
                                                            {
                                                                "id": 147,
                                                                "parent_id": 143,
                                                                "name": "Производство безалкогольных напитков",
                                                                "children": []
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "id": 203,
                                                        "parent_id": 137,
                                                        "name": "Created by Postman",
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 150,
                                                "parent_id": null,
                                                "name": "Пищевая химия",
                                                "children": [
                                                    {
                                                        "id": 151,
                                                        "parent_id": 150,
                                                        "name": "Пищевые добавки",
                                                        "children": []
                                                    },
                                                    {
                                                        "id": 154,
                                                        "parent_id": 150,
                                                        "name": "Пищевые ингредиенты",
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 157,
                                                "parent_id": null,
                                                "name": "Производственный контроль",
                                                "children": [
                                                    {
                                                        "id": 158,
                                                        "parent_id": 157,
                                                        "name": "Контроль сырья",
                                                        "children": []
                                                    },
                                                    {
                                                        "id": 161,
                                                        "parent_id": 157,
                                                        "name": "Контроль производства",
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 164,
                                                "parent_id": null,
                                                "name": "Продвижение продукции",
                                                "children": [
                                                    {
                                                        "id": 165,
                                                        "parent_id": 164,
                                                        "name": "Маркетинг",
                                                        "children": []
                                                    },
                                                    {
                                                        "id": 169,
                                                        "parent_id": 164,
                                                        "name": "Реклама",
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 201,
                                                "parent_id": null,
                                                "name": "Created by Postman",
                                                "children": []
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/directories/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.16. Создать каталог",
                "description": "Создать каталог",
                "operationId": "adminPanel.Materials.createDirectory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.CreateDirectory.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Объект каталога",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.DirectoryDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/directories/{directory_id}/rename": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.17. Переименовать каталог",
                "description": "Переименовать каталог",
                "operationId": "adminPanel.Materials.renameDirectory",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.Directory.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Materials.RenameDirectory.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Объект каталога",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.DirectoryDetails.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/directories/{directory_id}/delete": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.18. Удалить каталог",
                "description": "Удалить каталог",
                "operationId": "adminPanel.Materials.deleteDirectory",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.Directory.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Каталог успешно удалён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/materials/directories/{directory_id}/path": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Materials"
                ],
                "summary": "16.19. Получить путь от каталога до корня",
                "description": "Получить путь от каталога до корня",
                "operationId": "adminPanel.Materials.getPathToDirectory",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.Directory.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Объект каталога",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Materials.GetPathToDirectory.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/target-templates": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.TargetTemplates"
                ],
                "summary": "17.01. Получить список шаблонов цели",
                "description": "Получить список шаблонов цели",
                "operationId": "adminPanel.TargetTemplates.getCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.TargetTemplates.GetCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список шаблонов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.TargetTemplates.GetCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/target-templates/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.TargetTemplates"
                ],
                "summary": "17.02. Создать шаблон цели",
                "description": "Создать шаблон цели",
                "operationId": "adminPanel.TargetTemplates.createTemplate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.TargetTemplates.UpsertTemplate.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Шаблон цели",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.TargetTemplates.GetTemplate.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/target-templates/delete": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.TargetTemplates"
                ],
                "summary": "17.03. Удалить шаблоны целей",
                "description": "Удалить шаблоны целей",
                "operationId": "adminPanel.TargetTemplates.deleteCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.TargetTemplates.ObjectIdsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Количество удалённых шаблонов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.CountSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/target-templates/{template_id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.TargetTemplates"
                ],
                "summary": "17.04. Получить шаблон цели",
                "description": "Получить шаблон цели",
                "operationId": "adminPanel.TargetTemplates.getTemplate",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.TargetTemplate.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Шаблон цели",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.TargetTemplates.GetTemplate.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/target-templates/{template_id}/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.TargetTemplates"
                ],
                "summary": "17.05. Обновить шаблон цели",
                "description": "Обновить шаблон цели",
                "operationId": "adminPanel.TargetTemplates.updateTemplate",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.TargetTemplate.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.TargetTemplates.UpsertTemplate.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Шаблон цели",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.TargetTemplates.GetTemplate.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Объект не найден или имеют место ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/target-templates/{template_id}/delete": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.TargetTemplates"
                ],
                "summary": "17.06. Удалить шаблон цели",
                "description": "Удалить шаблон цели",
                "operationId": "adminPanel.TargetTemplates.deleteTemplate",
                "parameters": [
                    {"$ref": "#/components/parameters/AdminPanel.Path.TargetTemplate.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Шаблон успешно удалён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.EmptySuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/companies": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Companies"
                ],
                "summary": "18.01. Получить список компаний",
                "description": "Получить список компаний",
                "operationId": "adminPanel.Companies.getCompanies",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Companies.GetCollection.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список компаний",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Companies.GetCollection.SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/companies/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Companies"
                ],
                "summary": "18.02. Создать компанию",
                "description": "Создать компанию",
                "operationId": "adminPanel.Companies.createCompany",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Companies.CreateCompany.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Основные настройки компании",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Companies.GetBaseSettings.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ValidationErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/companies/{company_id}/change-history": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Companies"
                ],
                "summary": "18.03. Получить краткую историю изменений",
                "description": "Получить краткую историю изменений",
                "operationId": "adminPanel.Companies.getChangeHistory",
                "parameters": [
                    {"$ref": "#/components/parameters/Companies.Path.Company.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Основные настройки компании",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Companies.GetChangeHistory.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/companies/{company_id}/base-settings": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Companies"
                ],
                "summary": "18.04. Получить основные настройки компании",
                "description": "Получить основные настройки компании",
                "operationId": "adminPanel.Companies.getBaseSettings",
                "parameters": [
                    {"$ref": "#/components/parameters/Companies.Path.Company.Id"}
                ],
                "responses": {
                    "200": {
                        "description": "Основные настройки компании",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Companies.GetBaseSettings.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Запрашиваемый объект не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundErrorCollectionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/companies/{company_id}/base-settings/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "AdminPanel.Companies"
                ],
                "summary": "18.05. Обновить основные настройки компании",
                "description": "Обновить основные настройки компании",
                "operationId": "adminPanel.Companies.updateBaseSettings",
                "parameters": [
                    {"$ref": "#/components/parameters/Companies.Path.Company.Id"}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminPanel.Companies.UpdateBaseSettings.Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Основные настройки компании",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminPanel.Companies.GetBaseSettings.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundOrValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Base.Sort": {
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                        "example": "id"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Направление сортировки. Если не указано или указано некорректно, то будет использовано значение по умолчанию.",
                        "enum": ["asc", "desc"],
                        "example": "desc"
                    }
                }
            },
            "Base.OffsetPaginationAttribute.Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип пагинации",
                        "enum": ["offset"],
                        "example": "offset"
                    }
                }
            },
            "Base.OffsetPagination": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Base.OffsetPaginationAttribute.Type"},
                    {
                        "type": "object",
                        "properties": {
                            "page": {
                                "type": "integer",
                                "description": "Номер текущей страницы. Если не указан, то будет использовано значение по умолчанию - '1'.",
                                "example": 1
                            },
                            "per_page": {
                                "type": "integer",
                                "description": "Количество элементов на странице. Если не указано, то будет использовано значение по умолчанию.",
                                "example": 50
                            }
                        }
                    }
                ]
            },
            "Base.OffsetPaginationMeta": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Base.OffsetPaginationAttribute.Type"},
                    {
                        "type": "object",
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "description": "Номер текущей страницы",
                                "example": 1
                            },
                            "per_page": {
                                "type": "integer",
                                "description": "Количество элементов на странице",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "description": "Общее количество элементов",
                                "example": 123
                            }
                        }
                    }
                ]
            },
            "Base.CursorPaginationAttribute.Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип пагинации",
                        "enum": ["cursor"],
                        "example": "cursor"
                    }
                }
            },
            "Base.CursorPaginationAttribute.Limit": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "description": "Количество элементов в выборке",
                        "example": 500
                    }
                }
            },
            "Base.CursorPaginationAttribute.After": {
                "type": "object",
                "properties": {
                    "after": {
                        "type": "string",
                        "description": "Курсор, от которого должен осуществляться отсчёт вперёд. По умолчанию - ID сущности.",
                        "example": "123"
                    }
                }
            },
            "Base.CursorPaginationAttribute.Before": {
                "type": "object",
                "properties": {
                    "before": {
                        "type": "string",
                        "description": "Курсор, от которого должен осуществляться отсчёт назад. По умолчанию - ID сущности.",
                        "example": "123"
                    }
                }
            },
            "Base.CursorPaginationForward": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Base.CursorPaginationAttribute.Type"},
                    {"$ref": "#/components/schemas/Base.CursorPaginationAttribute.Limit"},
                    {"$ref": "#/components/schemas/Base.CursorPaginationAttribute.After"}
                ],
                "required": ["after"]
            },
            "Base.CursorPaginationBackward": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Base.CursorPaginationAttribute.Type"},
                    {"$ref": "#/components/schemas/Base.CursorPaginationAttribute.Limit"},
                    {"$ref": "#/components/schemas/Base.CursorPaginationAttribute.Before"}
                ],
                "required": ["before"]
            },
            "Base.CursorPaginationMeta": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип пагинации",
                        "enum": ["cursor"],
                        "example": "cursor"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Количество элементов",
                        "example": 500
                    }
                }
            },
            "Base.EmptySuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "boolean",
                                "enum": [true]
                            }
                        },
                        "required": ["success"]
                    }
                }
            },
            "Base.Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Код ошибки",
                        "example": "base.unknown_error"
                    },
                    "message": {
                        "type": "string",
                        "description": "Текст ошибки",
                        "nullable": true,
                        "example": "Unknown error"
                    },
                    "attribute": {
                        "type": "string",
                        "description": "Атрибут запроса, с которым связана ошибка",
                        "nullable": true,
                        "example": "login"
                    },
                    "stack_trace": {
                        "type": "string",
                        "description": "Stacktrace. Доступен только на тестовых окружениях",
                        "nullable": true
                    }
                },
                "required": ["code", "message"]
            },
            "Base.ValidationError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Код ошибки",
                        "enum": ["base.validation_error"],
                        "example": "base.validation_error"
                    },
                    "message": {
                        "type": "string",
                        "description": "Текст ошибки",
                        "example": "Login is a required attribute"
                    },
                    "attribute": {
                        "type": "string",
                        "description": "Атрибут запроса, с которым связана ошибка",
                        "nullable": true,
                        "example": "login"
                    }
                },
                "required": ["code", "message"]
            },
            "Base.ObjectNotFoundError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Код ошибки",
                        "enum": ["base.object_not_found"],
                        "example": "base.object_not_found"
                    },
                    "message": {
                        "type": "string",
                        "description": "Текст ошибки",
                        "example": "Object not found"
                    }
                },
                "required": ["code", "message"]
            },
            "Base.ErrorCollectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Base.Error"
                                }
                            }
                        }
                    }
                }
            },
            "Base.ValidationErrorCollectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Base.ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "Base.ObjectNotFoundErrorCollectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Base.ObjectNotFoundError"
                                }
                            }
                        }
                    }
                }
            },
            "Base.ObjectNotFoundOrValidationErrorResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "oneOf": [
                                        {"$ref": "#/components/schemas/Base.ValidationError"},
                                        {"$ref": "#/components/schemas/Base.ObjectNotFoundError"}
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Companies.CompanyAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 1
                    }
                }
            },
            "Companies.CompanyAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "Лучшая компания"
                    }
                }
            },
            "Companies.CompanyAttribute.UserLimit": {
                "type": "object",
                "properties": {
                    "user_limit": {
                        "type": "integer",
                        "description": "Лимит пользователей",
                        "example": 1000
                    }
                }
            },
            "Companies.CompanyAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "example": "active",
                        "enum": ["active", "hidden"]
                    }
                }
            },
            "Companies.CompanyAttribute.SubDomain": {
                "type": "object",
                "properties": {
                    "sub_domain": {
                        "type": "string",
                        "description": "Поддомен",
                        "example": "best-company"
                    }
                }
            },
            "Companies.Configuration.Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "company": {
                                        "type": "object",
                                        "allOf": [
                                            {"$ref": "#/components/schemas/Companies.CompanyAttribute.Id"},
                                            {"$ref": "#/components/schemas/Companies.CompanyAttribute.Name"}
                                        ]
                                    },
                                    "feature_flags": {
                                        "type": "object",
                                        "properties": {
                                            "remember_me": {
                                                "type": "boolean",
                                                "description": "Страница входа. Функция 'Запомнить меня'.",
                                                "example": true
                                            },
                                            "reset_password": {
                                                "type": "boolean",
                                                "description": "Страница входа. Функция 'Восстановить пароль'.",
                                                "example": true
                                            }
                                        }
                                    },
                                    "language_ids": {
                                        "type": "array",
                                        "description": "ID языка",
                                        "items": {
                                            "type": "string",
                                            "enum": ["ru", "en", "fr"],
                                            "example": "en"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Base.QuickSearch.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "query": {
                                "type": "string",
                                "description": "Текст для поиска по подстроке",
                                "example": "some_text"
                            }
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.CursorPaginationForward"
                    }
                }
            },
            "Base.GetTree.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Строка, по которой будет производиться поиск",
                                "example": "find me"
                            }
                        }
                    }
                }
            },
            "Base.CountSuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "count": {
                                        "type": "integer",
                                        "description": "Количество",
                                        "example": 2
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Access.Right.AccessToAdminPanel": {
                "type": "object",
                "properties": {
                    "app.admin.access_to_admin_panel": {
                        "type": "string",
                        "description": "Доступ к админ панели",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.AccessToEmployees": {
                "type": "object",
                "properties": {
                    "app.employees.access_to_employees": {
                        "type": "string",
                        "description": "Доступ к разделу 'Сотрудники'",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.CreateTarget": {
                "type": "object",
                "properties": {
                    "app.targets.create_target": {
                        "type": "string",
                        "description": "Создание цели",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.UpdateTarget": {
                "type": "object",
                "properties": {
                    "app.targets.update_target": {
                        "type": "string",
                        "description": "Обновление цели",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.DeleteTarget": {
                "type": "object",
                "properties": {
                    "app.targets.delete_target": {
                        "type": "string",
                        "description": "Удаление цели",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.CommentTarget": {
                "type": "object",
                "properties": {
                    "app.targets.comment_target": {
                        "type": "string",
                        "description": "Комментирование цели",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.CreateIdp": {
                "type": "object",
                "properties": {
                    "app.idp.create_idp": {
                        "type": "string",
                        "description": "Создать ИПР",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.DeleteIdp": {
                "type": "object",
                "properties": {
                    "app.idp.delete_idp": {
                        "type": "string",
                        "description": "Удалить ИПР",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.GenerateReports": {
                "type": "object",
                "properties": {
                    "app.idp.generate_reports": {
                        "type": "string",
                        "description": "Формирование отчётов",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.StartApproval": {
                "type": "object",
                "properties": {
                    "app.idp.start_approval": {
                        "type": "string",
                        "description": "Запуск процесса согласования",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.CancelApproval": {
                "type": "object",
                "properties": {
                    "app.idp.cancel_approval": {
                        "type": "string",
                        "description": "Отменить процесс согласования",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.ApproveStage": {
                "type": "object",
                "properties": {
                    "app.idp.approve_stage": {
                        "type": "string",
                        "description": "Согласовать",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.RejectStage": {
                "type": "object",
                "properties": {
                    "app.idp.reject_stage": {
                        "type": "string",
                        "description": "Отправить на доработку",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Access.Right.UpdateRoute": {
                "type": "object",
                "properties": {
                    "app.idp.update_route": {
                        "type": "string",
                        "description": "Редактиовать маршурт",
                        "enum": ["granted", "denied"],
                        "example": "granted"
                    }
                }
            },
            "Roles.RoleAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID роли",
                        "example": 56
                    }
                }
            },
            "Roles.RoleAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название роли",
                        "example": "Сотрудник"
                    }
                }
            },
            "Roles.RoleDefaultView": {
                "type": "object",
                "description": "Роль",
                "allOf": [
                    {"$ref": "#/components/schemas/Roles.RoleAttribute.Id"},
                    {"$ref": "#/components/schemas/Roles.RoleAttribute.Name"}
                ]
            },
            "Auth.Login.Request": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "Логин",
                        "example": "your_login"
                    },
                    "password": {
                        "type": "string",
                        "description": "Пароль",
                        "example": "your_password"
                    },
                    "company_id": {
                        "type": "integer",
                        "description": "ID компании",
                        "example": 1
                    }
                },
                "required": ["login", "password", "company_id"]
            },
            "Auth.Login.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "access_token": {
                                        "type": "string",
                                        "description": "Access token. Используется для последующих запросов к API.",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cGUiOiJKV1QifQ.eyJpc3MiOiJpZHBfYm94X2F1dGhfc2VydmVyIiwic3ViIjoiZmlyc3RfdXNlciIsImV4cCI6MTY5MTc4NTg1NSwiaWF0IjoxNjkxNjk5NDU1fQ.jWFCQJ806fkwxQ555tu3lroCtJ7nxmhTkpj11IGBJpE"
                                    },
                                    "token_type": {
                                        "type": "string",
                                        "description": "Тип access token'а",
                                        "enum": ["bearer"],
                                        "example": "bearer"
                                    },
                                    "expires_in": {
                                        "type": "integer",
                                        "description": "Количество секунд, через которое access token перестанет быть активным",
                                        "example": 86400
                                    },
                                    "refresh_token": {
                                        "type": "string",
                                        "description": "Refresh token. Используется для обновления пары access token / refresh token.",
                                        "example": "G1O8jaQj4KyGOc3-fbrIF30j5eUU_kqs9O2qDXk1"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "ID компании",
                                        "nullable": true,
                                        "example": 1
                                    }
                                },
                                "required": ["access_token", "token_type", "expires_in", "refresh_token", "company_id"]
                            }
                        }
                    }
                }
            },
            "Auth.RefreshToken.Request": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "description": "Refresh token",
                        "example": "G1O8jaQj4KyGOc3-fbrIF30j5eUU_kqs9O2qDXk1"
                    }
                },
                "required": ["refresh_token"]
            },
            "Auth.ResetPassword.ForgotPassword.Request": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "Логин",
                        "example": "your_login"
                    },
                    "company_id": {
                        "type": "integer",
                        "description": "ID компании",
                        "example": 1
                    }
                },
                "required": ["login", "company_id"]
            },
            "Auth.ResetPassword.ForgotPassword.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "transport": {
                                        "type": "string",
                                        "description": "Способ восстановления пароля",
                                        "enum": ["email"],
                                        "example": "email"
                                    },
                                    "token_lifetime": {
                                        "type": "string",
                                        "description": "Текстовое сообщение с временем жизни токена",
                                        "nullable": true,
                                        "example": "1 hour"
                                    }
                                },
                                "required": ["transport"]
                            }
                        }
                    }
                }
            },
            "Auth.ResetPassword.CheckToken.Request": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Токен, полученный из URL",
                        "example": "NDQStklU3VNpnlkp1i22kVVPe4QZxk0nkJi7llE0"
                    }
                },
                "required": ["token"]
            },
            "Auth.PasswordRequirement.AttributeMatch": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип правила",
                        "enum": ["attribute_match"],
                        "example": "attribute_match"
                    },
                    "use_login": {
                        "type": "boolean",
                        "description": "Может ли пароль совпадать с логином",
                        "example": false
                    },
                    "use_email": {
                        "type": "boolean",
                        "description": "Может ли пароль совпадать с email",
                        "example": false
                    },
                    "use_phone": {
                        "type": "boolean",
                        "description": "Может ли пароль совпадать с номером телефона",
                        "example": false
                    }
                },
                "required": ["type", "use_login", "use_email", "use_phone"]
            },
            "Auth.PasswordRequirement.Regexp": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип правила",
                        "enum": ["regexp"],
                        "example": "regexp"
                    },
                    "regexp": {
                        "type": "string",
                        "description": "Регулярное выражение для проверки пароля",
                        "example": "\\w{16}"
                    },
                    "hint": {
                        "type": "string",
                        "description": "Описание регулярного выражения",
                        "example": "Пароль должен содержать не менее 16 символов"
                    }
                },
                "required": ["type", "regexp", "hint"]
            },
            "Auth.PasswordRequirements.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/Auth.PasswordRequirement.Regexp"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Auth.PasswordRequirement.AttributeMatch"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Auth.ResetPassword.SaveNewPassword.Request": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Токен, полученный из URL",
                        "example": "NDQStklU3VNpnlkp1i22kVVPe4QZxk0nkJi7llE0"
                    },
                    "password": {
                        "type": "string",
                        "description": "Новый пароль",
                        "example": "your_new_password"
                    }
                },
                "required": ["token", "password"]
            },
            "Auth.ResetPassword.PasswordRequirement.Error": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Error"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "password_requirement": {
                                "type": "object",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Auth.PasswordRequirement.Regexp"
                                    },
                                    {
                                        "$ref": "#/components/schemas/Auth.PasswordRequirement.AttributeMatch"
                                    }
                                ]
                            }
                        },
                        "required": ["code", "message", "password_requirement"]
                    }
                ]
            },
            "Auth.ResetPassword.SaveNewPassword.ErrorCollectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "description": "Список ошибок",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/Base.Error"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Auth.ResetPassword.PasswordRequirement.Error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Auth.LoginByExternalToken.Request": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT, выданный 'Академией Equeo'",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cGUiOiJKV1QifQ.eyJpc3MiOiJlcXVlb19hdXRoX3NlcnZlciIsInN1YiI6IjJuZF91c2VyIiwiY29tcGFueV9pZCI6MSwiZXhwIjoxNjkyODkzMDQ3LCJpYXQiOjE2OTI4MDY2NDd9.3uuI7Hjb_5n1JFz36Uialz8PIc7hEMLTRh-83X3U7wA"
                    },
                    "company_id": {
                        "type": "integer",
                        "description": "ID компании",
                        "example": 1
                    }
                },
                "required": ["token", "company_id"]
            },
            "Feedback.NewTicket.Request": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Почта для ответа",
                        "example": "test@test.com"
                    },
                    "text": {
                        "type": "string",
                        "description": "Текст запроса",
                        "example": "Ничего не работает. Ничего не понятно."
                    },
                    "company_id": {
                        "type": "integer",
                        "description": "ID компании",
                        "example": 1
                    }
                },
                "required": ["email", "text", "company_id"]
            },
            "Users.UserAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID",
                        "example": "my_id"
                    }
                }
            },
            "Users.UserAttribute.EmployeeID": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "ID сотрудника",
                        "example": 567
                    }
                }
            },
            "Users.UserAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": ["active", "archived"],
                        "example": "active"
                    }
                }
            },
            "Users.UserAttribute.Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email",
                        "example": "test@test.com"
                    }
                }
            },
            "Users.UserAttribute.FirstName": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "Имя",
                        "example": "Иван"
                    }
                }
            },
            "Users.UserAttribute.LastName": {
                "type": "object",
                "properties": {
                    "last_name": {
                        "type": "string",
                        "description": "Фамилия",
                        "example": "Иванов"
                    }
                }
            },
            "Users.UserAttribute.FullName": {
                "type": "object",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "description": "Имя, фамилия",
                        "example": "Иван Иванов"
                    }
                }
            },
            "Users.UserAttribute.AccessRights": {
                "type": "object",
                "properties": {
                    "access_rights": {
                        "type": "object",
                        "allOf": [
                            {"$ref": "#/components/schemas/Access.Right.AccessToAdminPanel"},
                            {"$ref": "#/components/schemas/Access.Right.AccessToEmployees"},
                            {"$ref": "#/components/schemas/Access.Right.CreateTarget"},
                            {"$ref": "#/components/schemas/Access.Right.UpdateTarget"},
                            {"$ref": "#/components/schemas/Access.Right.DeleteTarget"},
                            {"$ref": "#/components/schemas/Access.Right.CommentTarget"},
                            {"$ref": "#/components/schemas/Access.Right.CreateIdp"},
                            {"$ref": "#/components/schemas/Access.Right.DeleteIdp"},
                            {"$ref": "#/components/schemas/Access.Right.GenerateReports"}
                        ]
                    }
                }
            },
            "Users.UserAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Users.UserAttribute.Source": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string",
                        "description": "Источник данных",
                        "example": "idp"
                    }
                }
            },
            "Users.Profile.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    { "$ref": "#/components/schemas/Users.UserAttribute.Id" },
                                    { "$ref": "#/components/schemas/Users.UserAttribute.Email" },
                                    { "$ref": "#/components/schemas/Users.UserAttribute.FirstName" },
                                    { "$ref": "#/components/schemas/Users.UserAttribute.LastName" },
                                    { "$ref": "#/components/schemas/Users.UserAttribute.EmployeeID" },
                                    { "$ref": "#/components/schemas/Users.UserAttribute.AccessRights" }
                                ]
                            }
                        }
                    }
                }
            },
            "Users.QuickSearch.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "allOf": [
                                        { "$ref": "#/components/schemas/Users.UserAttribute.Id" },
                                        { "$ref": "#/components/schemas/Users.UserAttribute.FirstName" },
                                        { "$ref": "#/components/schemas/Users.UserAttribute.LastName" }
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.CursorPaginationMeta"
                            }
                        }
                    }
                }
            },
            "Employees.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["created_at", "id", "external_id", "full_name", "idp_status", "idp_progress", "idp_price"],
                                "example": "created_at"
                            }
                        }
                    }
                ]
            },
            "Employees.Collection.Filter": {
                "type": "object",
                "properties": {
                    "idp_year": {
                        "type": "integer",
                        "description": "Год ИПР",
                        "nullable": false,
                        "example": 2023
                    },
                    "idp_statuses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Статус ИПР",
                            "enum": ["approval", "approved", "not_approved", "cancelled", "draft", "no_idp"],
                            "example": "approval"
                        }
                    },
                    "employee_statuses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Статус сотрудника",
                            "enum": ["active", "archived"],
                            "example": "active"
                        }
                    },
                    "action_required_only": {
                        "type": "boolean",
                        "description": "Если выбрано (true), то будут возвращены только те сотрудники, для которых текущий пользователь назначен согласующим по ИПР и в данный момент наступил его этап согласования.",
                        "nullable": true,
                        "example": true
                    },
                    "text_query": {
                        "type": "string",
                        "description": "Значение из текстовой строки поиска. Используется для фильтрации по имени или ID",
                        "nullable": true,
                        "example": "some_employee_login"
                    },
                    "division_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID элемента орг. структуры",
                            "example": 256
                        }
                    },
                    "target_template_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID шаблонов целей, из которых были созданы цели сотрудников",
                            "example": 512
                        }
                    }
                }
            },
            "Employees.Collection.Request": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/Employees.Collection.Sort"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/Employees.Collection.Filter"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.OffsetPagination"
                    }
                },
                "required": ["filter"]
            },
            "Employees.Collection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Сотрудник",
                                    "allOf": [
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Id"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.ExternalId"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Status"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.CreatedAt"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName"},
                                        {
                                            "type": "object",
                                            "properties": {
                                                "idp": {
                                                    "type": "object",
                                                    "description": "ИПР",
                                                    "nullable": true,
                                                    "allOf": [
                                                        { "$ref": "#/components/schemas/Idp.IdpAttribute.Id" },
                                                        { "$ref": "#/components/schemas/Idp.IdpAttribute.Status" },
                                                        { "$ref": "#/components/schemas/Idp.IdpAttribute.CountOfTargets" },
                                                        { "$ref": "#/components/schemas/Idp.IdpAttribute.CountOfTargetsDone" },
                                                        { "$ref": "#/components/schemas/Idp.IdpAttribute.Price" },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "last_attempt": {
                                                                    "type": "object",
                                                                    "description": "Краткая информация о последней попытке согласования",
                                                                    "nullable": true,
                                                                    "allOf": [
                                                                        { "$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.Status" },
                                                                        { "$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.InitiatedAt" },
                                                                        { "$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.FinishedAt" },
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "count_of_stages": {
                                                                                    "type": "integer",
                                                                                    "description": "Количество этапов",
                                                                                    "example": 3
                                                                                },
                                                                                "count_of_approved_stages": {
                                                                                    "type": "integer",
                                                                                    "description": "Количество согласованных этапов",
                                                                                    "example": 1
                                                                                },
                                                                                "approvers": {
                                                                                    "type": "array",
                                                                                    "description": "Краткая информация о согласующих",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "allOf": [
                                                                                            { "$ref": "#/components/schemas/Idp.RouteUser" },
                                                                                            { "$ref": "#/components/schemas/Idp.ApproverAttribute.Status" },
                                                                                            { "$ref": "#/components/schemas/Idp.ApproverAttribute.StatusChangedAt" }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "divisions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Divisions.DivisionDefaultView"
                                                    }
                                                },
                                                "position": {
                                                    "$ref": "#/components/schemas/Positions.PositionDefaultView"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.OffsetPaginationMeta"
                            }
                        }
                    }
                }
            },
            "Employees.Count.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/Employees.Collection.Filter"
                    }
                },
                "required": ["filter"]
            },
            "Employees.Count.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "count": {
                                        "type": "integer",
                                        "description": "Количество сотрудников",
                                        "example": 780
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Employees.EmployeeBriefDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    { "$ref": "#/components/schemas/Employees.EmployeeAttribute.Id" },
                                    { "$ref": "#/components/schemas/Employees.EmployeeAttribute.ExternalId" },
                                    { "$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName" },
                                    { "$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName" },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "idps": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Idp.Idp.DetailsBriefView"
                                                }
                                            },
                                            "position": {
                                                "type": "object",
                                                "nullable": true,
                                                "description": "Краткая информация о текущей должности. NULL, если дожность у сотрудника отсутствует.",
                                                "allOf": [
                                                    {"$ref": "#/components/schemas/Positions.PositionDefaultView"},
                                                    {"$ref": "#/components/schemas/Positions.ItemAttribute.PercentOfSuitability"}
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "Employees.QuickSearch.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "allOf": [
                                        { "$ref": "#/components/schemas/Employees.EmployeeAttribute.Id" },
                                        { "$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName" },
                                        { "$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName" }
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.CursorPaginationMeta"
                            }
                        }
                    }
                }
            },
            "Employees.QuickSearchExtended.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "allOf": [
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Id"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Email"},
                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.ExternalId"}
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.CursorPaginationMeta"
                            }
                        }
                    }
                }
            },
            "Skills.LevelIndicator": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Порядковый номер. Чем выше значение, тем лучше уровень владения навыком.",
                        "example": 5
                    },
                    "description": {
                        "type": "string",
                        "description": "Описание",
                        "example": "Уверенно владею навыком, могу помочь и научить другого."
                    },
                    "label": {
                        "type": "string",
                        "description": "Метка",
                        "example": "A"
                    }
                }
            },
            "Skills.LevelIndicators.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Skills.LevelIndicator"
                                }
                            }
                        }
                    }
                }
            },
            "Skills.ItemAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 16
                    }
                }
            },
            "Skills.ItemAttribute.ParentID": {
                "type": "object",
                "properties": {
                    "parent_id": {
                        "type": "integer",
                        "description": "ID родителя",
                        "example": 512,
                        "nullable": true
                    }
                }
            },
            "Skills.ItemAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "My skill"
                    }
                }
            },
            "Skills.ItemAttribute.Description": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Описание",
                        "example": "My description"
                    }
                }
            },
            "Skills.ItemAttribute.Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип объекта",
                        "enum": ["skill", "competency", "competency_cluster"],
                        "example": "skill"
                    }
                }
            },
            "Skills.ItemAttribute.CompetencyClusterType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип объекта",
                        "enum": ["competency_cluster"],
                        "example": "competency_cluster"
                    }
                }
            },
            "Skills.ItemAttribute.CompetencyType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип объекта",
                        "enum": ["competency"],
                        "example": "competency"
                    }
                }
            },
            "Skills.ItemAttribute.SkillType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип объекта",
                        "enum": ["skill"],
                        "example": "skill"
                    }
                }
            },
            "Skills.ItemAttribute.CurrentLevelIndicatorID": {
                "type": "object",
                "properties": {
                    "current_level_indicator_id": {
                        "type": "integer",
                        "description": "Текущий уровень владения навыком, ID",
                        "example": 5
                    }
                }
            },
            "Skills.ItemAttribute.RequiredLevelIndicatorID": {
                "type": "object",
                "properties": {
                    "required_level_indicator_id": {
                        "type": "integer",
                        "description": "Требуемый уровень владения навыком, ID",
                        "example": 5
                    }
                }
            },
            "Skills.SkillParent.CompetencyCluster": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.CompetencyClusterType"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.ParentID"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"}
                ]
            },
            "Skills.SkillParent.Competency": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.CompetencyType"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.ParentID"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"}
                ]
            },
            "Skills.Skill.CollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Type"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.ParentID"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.CurrentLevelIndicatorID"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.RequiredLevelIndicatorID"},
                    {
                        "type": "object",
                        "properties": {
                            "parents": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        { "$ref": "#/components/schemas/Skills.SkillParent.CompetencyCluster" },
                                        { "$ref": "#/components/schemas/Skills.SkillParent.Competency" }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "Skills.Skill.DetailView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.Skill.CollectionView"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Description"}
                ]
            },
            "Skills.SkillDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Skills.Skill.DetailView"
                            }
                        }
                    }
                }
            },
            "Skills.Skill.DetailBriefView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Type"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Description"}
                ]
            },
            "Skills.SkillDetailsBrief.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Skills.Skill.DetailBriefView"
                            }
                        }
                    }
                }
            },
            "Skills.TreeItemAttribute.Children": {
                "type": "object",
                "properties": {
                    "children": {
                        "type": "array",
                        "description": "Список дочерних элементов"
                    }
                }
            },
            "Skills.TreeItem.Base": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.ParentID"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"},
                    {"$ref": "#/components/schemas/Skills.TreeItemAttribute.Children"}
                ]
            },
            "Skills.TreeItem.CompetencyCluster": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.CompetencyClusterType"},
                    {"$ref": "#/components/schemas/Skills.TreeItem.Base"}
                ]
            },
            "Skills.TreeItem.Competency": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.CompetencyType"},
                    {"$ref": "#/components/schemas/Skills.TreeItem.Base"}
                ]
            },
            "Skills.TreeItem.Skill": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.SkillType"},
                    {"$ref": "#/components/schemas/Skills.TreeItem.Base"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.CurrentLevelIndicatorID"},
                    {"$ref": "#/components/schemas/Skills.ItemAttribute.RequiredLevelIndicatorID"}
                ]
            },
            "Skills.Tree.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        { "$ref": "#/components/schemas/Skills.TreeItem.CompetencyCluster" },
                                        { "$ref": "#/components/schemas/Skills.TreeItem.Competency" },
                                        { "$ref": "#/components/schemas/Skills.TreeItem.Skill" }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Targets.MaterialToAdd": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 256
                    },
                    "reason": {
                        "type": "string",
                        "description": "Обоснование для платного материала",
                        "example": "Очень надо"
                    }
                }
            },
            "Targets.TargetAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 64
                    }
                }
            },
            "Targets.TargetAttribute.IdpId": {
                "type": "object",
                "properties": {
                    "idp_id": {
                        "type": "integer",
                        "description": "ИПР ID",
                        "example": 678
                    }
                }
            },
            "Targets.TargetAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "My target"
                    }
                }
            },
            "Targets.TargetAttribute.Description": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Описание",
                        "nullable": true,
                        "example": "Some description"
                    }
                }
            },
            "Targets.TargetAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": [
                            "not_started",
                            "in_progress",
                            "done",
                            "cancelled"
                        ],
                        "example": "not_started"
                    }
                }
            },
            "Targets.TargetAttribute.Priority": {
                "type": "object",
                "properties": {
                    "priority": {
                        "type": "string",
                        "description": "Приоритет",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    }
                }
            },
            "Targets.TargetAttribute.Deadline": {
                "type": "object",
                "properties": {
                    "deadline": {
                        "type": "string",
                        "description": "Крайний срок выполнения",
                        "example": "2023-09-18 15:15:17 +03:00"
                    }
                }
            },
            "Targets.TargetAttribute.Percent": {
                "type": "object",
                "properties": {
                    "percent": {
                        "type": "integer",
                        "description": "Процент",
                        "example": 75
                    }
                }
            },
            "Targets.TargetAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания цели",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Targets.TargetAttribute.CountOfMaterials": {
                "type": "object",
                "properties": {
                    "count_of_materials": {
                        "type": "integer",
                        "description": "Количество выбранных материалов",
                        "example": 2
                    }
                }
            },
            "Targets.TargetAttribute.CountOfComments": {
                "type": "object",
                "properties": {
                    "count_of_comments": {
                        "type": "integer",
                        "description": "Количество комментариев",
                        "example": 0
                    }
                }
            },
            "Targets.TargetAttribute.Skills": {
                "type": "object",
                "properties": {
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                                {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"}
                            ]
                        }
                    }
                }
            },
            "Targets.Target.ToUpdate": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Name"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Description"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Priority"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Deadline"},
                    {
                        "type": "object",
                        "properties": {
                            "skill_ids": {
                                "type": "array",
                                "description": "ID навыков",
                                "items": {
                                    "type": "integer",
                                    "description": "ID",
                                    "example": 128
                                }
                            },
                            "materials": {
                                "type": "array",
                                "description": "Материалы",
                                "items": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "allOf": [
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Reason"}
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "allOf": [
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Reason"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.TypeId"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Url"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.StartAt"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.EndAt"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Duration"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Provider"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Trainer"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Price"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Description"},
                                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.SkillIds"}
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "Targets.Target.ToCreate": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.IdpId"},
                    {"$ref": "#/components/schemas/Targets.Target.ToUpdate"}
                ]
            },
            "Targets.Target.ToCreateCollection": {
                "type": "object",
                "properties": {
                    "year" : {
                        "type": "integer",
                        "description": "Год",
                        "example": 2023
                    },
                    "employee_ids": {
                        "type": "array",
                        "description": "ID сотрудников",
                        "items": {
                            "type": "integer",
                            "description": "ID сотрудника",
                            "example": 64
                        }
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Targets.Target.ToUpdate"
                        }
                    }
                }
            },
            "Targets.Target.Base": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Id"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Name"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Status"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Priority"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.CreatedAt"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Deadline"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Percent"}
                ]
            },
            "Targets.Filters.IdpId": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.IdpId"}
                ],
                "required": ["idp_id"]
            },
            "Targets.Filters.StatusGroup": {
                "type": "object",
                "properties": {
                    "status_group": {
                        "type": "string",
                        "description": "Группа статусов. 'active' включает в себя статусы 'not_started', 'in_progress'. 'completed' включает в себя статусы 'done', 'cancelled'",
                        "enum": [
                            "active",
                            "completed"
                        ],
                        "example": "active"
                    }
                }
            },
            "Targets.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["priority", "created_at", "deadline"],
                                "example": "priority"
                            }
                        }
                    }
                ]
            },
            "Targets.Collection.Request": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/Targets.Collection.Sort"
                    },
                    "filter": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Targets.Filters.IdpId"
                            },
                            {
                                "$ref": "#/components/schemas/Targets.Filters.StatusGroup"
                            }
                        ],
                        "required": ["idp_id"]
                    }
                },
                "required": ["filter"]
            },
            "Targets.Target.CollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.Target.Base"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.CountOfMaterials"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.CountOfComments"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Skills"}
                ]
            },
            "Targets.Collection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Targets.Target.CollectionView"
                                }
                            }
                        }
                    }
                }
            },
            "Targets.Target.DetailView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.Target.Base"},
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Description"}
                ]
            },
            "Targets.TargetDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Targets.Target.DetailView"
                            }
                        }
                    }
                }
            },
            "Targets.UpdateStatus.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Status"}
                ]
            },
            "Targets.UpdatePercent.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Targets.TargetAttribute.Percent"}
                ]
            },
            "Targets.StatusGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID группы",
                        "enum": ["active", "completed"],
                        "example": "active"
                    },
                    "count_of_targets": {
                        "type": "integer",
                        "description": "Количество целей сотрудника в таком статусе",
                        "example": 4
                    }
                }
            },
            "Targets.GetStatusGroups.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Targets.Filters.IdpId"
                            },
                            {
                                "$ref": "#/components/schemas/Targets.Filters.StatusGroup"
                            }
                        ],
                        "required": ["idp_id"]
                    }
                },
                "required": ["filter"]
            },
            "Targets.GetStatusGroups.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Targets.StatusGroup"
                                }
                            }
                        }
                    }
                }
            },
            "Targets.TargetSkills.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Skills.Skill.CollectionView"
                                }
                            }
                        }
                    }
                }
            },
            "Targets.TargetMaterial.CollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.Material.BriefView"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Reason"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.AssignmentStatus"}
                ]
            },
            "Targets.TargetMaterials.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Targets.TargetMaterial.CollectionView"
                                }
                            }
                        }
                    }
                }
            },
            "Targets.TargetMaterial.DetailView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.Material.DetailView"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Reason"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.AssignmentStatus"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.AssignmentStatusChangeFlag"}
                ]
            },
            "Targets.TargetMaterial.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Targets.TargetMaterial.DetailView"
                            }
                        }
                    }
                }
            },
            "Targets.TargetComments.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Comments.Comment"
                                }
                            }
                        }
                    }
                }
            },
            "Targets.LeaveCommentOnTarget.Request": {
                "type": "object",
                "allOf": [
                    { "$ref": "#/components/schemas/Comments.CommentAttribute.Text" }
                ]
            },
            "Targets.UpdateAssignmentStatus.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.AssignmentStatus"}
                ]
            },
            "Targets.CountOfRelations.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "skills": {
                                        "type": "integer",
                                        "description": "Количество навыков",
                                        "example": 2
                                    },
                                    "materials": {
                                        "type": "integer",
                                        "description": "Количество материалов",
                                        "example": 3
                                    },
                                    "comments": {
                                        "type": "integer",
                                        "description": "Количество комментариев",
                                        "example": 2
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 16
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "Best target"
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Description": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Описание",
                        "example": "Place description here"
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Priority": {
                "type": "object",
                "properties": {
                    "priority": {
                        "type": "string",
                        "description": "Приоритет",
                        "enum": ["low", "medium", "high"],
                        "example": "medium"
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.ApplyToCurrentUsers": {
                "type": "object",
                "properties": {
                    "apply_to_current_users": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Применить к текущим сотрудникам",
                        "example": false
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.AssignmentType": {
                "type": "object",
                "properties": {
                    "assignment_type": {
                        "type": "string",
                        "description": "Тип назначения (одноразовый, повторяющийся)",
                        "enum": ["once", "recurrent"],
                        "example": "recurrent"
                    }
                }
            },
            "TargetTemplates.RecurrentAssignmentAttribute.PeriodType": {
                "type": "object",
                "properties": {
                    "period_type": {
                        "type": "string",
                        "description": "Тип периода",
                        "enum": ["day", "week", "month", "year"],
                        "example": "month"
                    }
                }
            },
            "TargetTemplates.RecurrentAssignmentAttribute.PeriodMultiplier": {
                "type": "object",
                "properties": {
                    "period_multiplier": {
                        "type": "integer",
                        "description": "Мультипликатор периода",
                        "example": 3
                    }
                }
            },
            "TargetTemplates.RecurrentAssignmentAttribute.Frequency": {
                "type": "object",
                "properties": {
                    "frequency": {
                        "type": "integer",
                        "description": "Частота назначений",
                        "example": 1
                    }
                }
            },
            "TargetTemplates.RecurrentAssignmentAttribute.UseDeadlineBasedOffset": {
                "type": "object",
                "properties": {
                    "use_deadline_based_offset": {
                        "type": "boolean",
                        "description": "Использовать сдвиг на основании крайнего срока исполнения",
                        "example": true
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.RecurrentAssignment": {
                "type": "object",
                "properties": {
                    "recurrent_assignment": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.PeriodType"},
                            {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.PeriodMultiplier"},
                            {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.Frequency"},
                            {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.UseDeadlineBasedOffset"}
                        ]
                    }
                }
            },
            "TargetTemplates.DeadlineAttribute.IsCustom": {
                "type": "object",
                "properties": {
                    "is_custom": {
                        "type": "boolean",
                        "description": "Флаг, отвечающий за установку срока вручную",
                        "example": true
                    }
                }
            },
            "TargetTemplates.DeadlineAttribute.PeriodType": {
                "type": "object",
                "properties": {
                    "period_type": {
                        "type": "string",
                        "description": "Тип периода",
                        "enum": ["day", "week", "month", "year"],
                        "example": "day"
                    }
                }
            },
            "TargetTemplates.DeadlineAttribute.Value": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "integer",
                        "description": "Значение",
                        "example": 5
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Deadline": {
                "type": "object",
                "properties": {
                    "deadline": {
                        "type": "object",
                        "allOf": [
                            {"$ref": "#/components/schemas/TargetTemplates.DeadlineAttribute.IsCustom"},
                            {"$ref": "#/components/schemas/TargetTemplates.DeadlineAttribute.PeriodType"},
                            {"$ref": "#/components/schemas/TargetTemplates.DeadlineAttribute.Value"}
                        ]
                    }
                }
            },
            "TargetTemplates.ScopeAttribute.RoleIds": {
                "type": "object",
                "properties": {
                    "role_ids": {
                        "type": "array",
                        "description": "ID ролей",
                        "items": {
                            "type": "integer",
                            "description": "ID роли",
                            "example": 32
                        }
                    }
                }
            },
            "TargetTemplates.ScopeAttribute.Roles": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "description": "Роли",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Roles.RoleAttribute.Id"},
                                {"$ref": "#/components/schemas/Roles.RoleAttribute.Name"}
                            ]
                        }
                    }
                }
            },
            "TargetTemplates.ScopeAttribute.DivisionIds": {
                "type": "object",
                "properties": {
                    "division_ids": {
                        "type": "array",
                        "description": "ID подразделений",
                        "items": {
                            "type": "integer",
                            "description": "ID подразделения",
                            "example": 64
                        }
                    }
                }
            },
            "TargetTemplates.ScopeAttribute.Divisions": {
                "type": "object",
                "properties": {
                    "divisions": {
                        "type": "array",
                        "description": "Подразделения",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Divisions.ItemAttribute.Id"},
                                {"$ref": "#/components/schemas/Divisions.ItemAttribute.Name"}
                            ]
                        }
                    }
                }
            },
            "TargetTemplates.ScopeAttribute.EmployeeIds": {
                "type": "object",
                "properties": {
                    "employee_ids": {
                        "type": "array",
                        "description": "ID сотрудников",
                        "items": {
                            "type": "integer",
                            "description": "ID сотрудника",
                            "example": 128
                        }
                    }
                }
            },
            "TargetTemplates.ScopeAttribute.Employees": {
                "type": "object",
                "properties": {
                    "employees": {
                        "type": "array",
                        "description": "Сотрудники",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Id"},
                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName"},
                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName"}
                            ]
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Scope.Ids": {
                "type": "object",
                "properties": {
                    "scope": {
                        "type": "object",
                        "allOf": [
                            {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.RoleIds"},
                            {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.DivisionIds"},
                            {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.EmployeeIds"}
                        ]
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Scope.Objects": {
                "type": "object",
                "properties": {
                    "scope": {
                        "type": "object",
                        "allOf": [
                            {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.Roles"},
                            {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.Divisions"},
                            {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.Employees"}
                        ]
                    }
                }
            },
            "TargetTemplates.ScopeExtraAttribute.EmployeeIds": {
                "type": "object",
                "properties": {
                    "employee_ids": {
                        "type": "array",
                        "description": "ID сотрудников",
                        "items": {
                            "type": "integer",
                            "description": "ID сотрудника",
                            "example": 128
                        }
                    }
                }
            },
            "TargetTemplates.ScopeExtraAttribute.Employees": {
                "type": "object",
                "properties": {
                    "employees": {
                        "type": "array",
                        "description": "Сотрудники",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Id"},
                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName"},
                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName"}
                            ]
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.ScopeExtra.Ids": {
                "type": "object",
                "properties": {
                    "scope_extra": {
                        "$ref": "#/components/schemas/TargetTemplates.ScopeExtraAttribute.EmployeeIds"
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.ScopeExtra.Objects": {
                "type": "object",
                "properties": {
                    "scope_extra": {
                        "$ref": "#/components/schemas/TargetTemplates.ScopeExtraAttribute.Employees"
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.MaterialIds": {
                "type": "object",
                "properties": {
                    "material_ids": {
                        "type": "array",
                        "description": "ID выбранных материалов",
                        "items": {
                            "type": "integer",
                            "description": "ID материала",
                            "example": 256
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Materials": {
                "type": "object",
                "properties": {
                    "materials": {
                        "type": "array",
                        "description": "Выбранные материалы",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                                {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"}
                            ]
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.SkillIds": {
                "type": "object",
                "properties": {
                    "skill_ids": {
                        "type": "array",
                        "description": "ID выбранных навыков",
                        "items": {
                            "type": "integer",
                            "description": "ID навыка",
                            "example": 512
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.Skills": {
                "type": "object",
                "properties": {
                    "skills": {
                        "type": "array",
                        "description": "Выбранные навыки",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                                {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"}
                            ]
                        }
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "TargetTemplates.TemplateAttribute.UpdatedAt": {
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "nullable": true,
                        "description": "Дата обновления",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "TargetTemplates.CollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Id"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Name"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.AssignmentType"},
                    {
                        "type": "object",
                        "properties": {
                            "recurrent_assignment": {
                                "type": "object",
                                "nullable": true,
                                "allOf": [
                                    {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.PeriodType"},
                                    {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.PeriodMultiplier"},
                                    {"$ref": "#/components/schemas/TargetTemplates.RecurrentAssignmentAttribute.Frequency"}
                                ]
                            },
                            "count_of_assignments": {
                                "type": "integer",
                                "description": "Количество назначений",
                                "example": 55
                            },
                            "count_of_scope_settings": {
                                "type": "integer",
                                "description": "Количество настроек области действия",
                                "example": 3
                            },
                            "scope_settings": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.Roles"},
                                    {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.Divisions"},
                                    {"$ref": "#/components/schemas/TargetTemplates.ScopeAttribute.Employees"}
                                ]
                            }
                        }
                    }
                ]
            },
            "Idp.IdpAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 321
                    }
                }
            },
            "Idp.IdpAttribute.Year": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "integer",
                        "description": "Год",
                        "example": 2023
                    }
                }
            },
            "Idp.IdpAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": ["approval", "approved", "not_approved", "cancelled", "draft"],
                        "example": "approval"
                    }
                }
            },
            "Idp.IdpAttribute.CountOfTargets": {
                "type": "object",
                "properties": {
                    "count_of_targets": {
                        "type": "integer",
                        "description": "Количество целей в статусах, отличных от cancelled.",
                        "example": 5
                    }
                }
            },
            "Idp.IdpAttribute.CountOfTargetsDone": {
                "type": "object",
                "properties": {
                    "count_of_targets_done": {
                        "type": "integer",
                        "description": "Количество выполненных целей",
                        "example": 2
                    }
                }
            },
            "Idp.IdpAttribute.Price": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number",
                        "format": "float",
                        "description": "Сумма затрат на все платные материалы, в рублях",
                        "example": 25000.0
                    }
                }
            },
            "Idp.Route": {
                "type": "object",
                "properties": {
                    "stages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Idp.RouteStage"
                        }
                    }
                }
            },
            "Idp.RouteStageAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 4096
                    }
                }
            },
            "Idp.RouteStageAttribute.SerialNumber": {
                "type": "object",
                "properties": {
                    "serial_number": {
                        "type": "integer",
                        "description": "Порядковый номер (1, 2, ..., N)",
                        "example": 1
                    }
                }
            },
            "Idp.RouteStageAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "Очень важный этап"
                    }
                }
            },
            "Idp.RouteStageAttribute.VoteStrategy": {
                "type": "object",
                "properties": {
                    "vote_strategy": {
                        "type": "string",
                        "description": "Условие, при котором этап будет считаться согласованным. First - решение первого согласующего проэцируется на весь этап. Unanimous - этап будет считаться согласованным только если согласовали все.",
                        "enum": ["first", "unanimous"],
                        "example": "first"
                    }
                }
            },
            "Idp.RouteStageAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": ["none", "approved", "not_approved"],
                        "example": "none"
                    }
                }
            },
            "Idp.RouteStageAttribute.IsEditable": {
                "type": "object",
                "properties": {
                    "is_editable": {
                        "type": "boolean",
                        "description": "Можно ли редактировать этап. Не распространяется на вложенных согласующих.",
                        "example": true
                    }
                }
            },
            "Idp.RouteStageAttribute.ApproverIDs": {
                "type": "object",
                "properties": {
                    "approver_ids": {
                        "type": "array",
                        "description": "ID согласующих",
                        "items": {
                            "type": "string",
                            "example": "some_user_id"
                        }
                    }
                }
            },
            "Idp.ApproverAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": ["none", "approved", "not_approved"],
                        "example": "none"
                    }
                }
            },
            "Idp.ApproverAttribute.StatusChangedAt": {
                "type": "object",
                "properties": {
                    "status_changed_at": {
                        "type": "string",
                        "description": "Дата изменения статуса",
                        "example": "2023-09-01 12:10:20 +03:00",
                        "nullable": true
                    }
                }
            },
            "Idp.ApproverAttribute.Comment": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Комментарий",
                        "example": "Комментарий к согласованию"
                    }
                }
            },
            "Idp.ApproverAttribute.IsEditable": {
                "type": "object",
                "properties": {
                    "is_editable": {
                        "type": "boolean",
                        "description": "Можно ли редактировать согласующего",
                        "example": true
                    }
                }
            },
            "Idp.RouteStage": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.SerialNumber"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Name"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.VoteStrategy"},
                    {
                        "type": "object",
                        "properties": {
                            "approvers": {
                                "type": "array",
                                "description": "Согласующие",
                                "items": {
                                    "$ref": "#/components/schemas/Idp.RouteUser"
                                }
                            }
                        }
                    }
                ]
            },
            "Idp.RouteUser": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Users.UserAttribute.Id"},
                    {"$ref": "#/components/schemas/Users.UserAttribute.FirstName"},
                    {"$ref": "#/components/schemas/Users.UserAttribute.LastName"}
                ]
            },
            "Idp.ApprovalAttemptAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 4096
                    }
                }
            },
            "Idp.ApprovalAttemptAttribute.SerialNumber": {
                "type": "object",
                "properties": {
                    "serial_number": {
                        "type": "integer",
                        "description": "Порядковый номер (1, 2, ..., N)",
                        "example": 1
                    }
                }
            },
            "Idp.ApprovalAttemptAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": ["approval", "approved", "not_approved", "cancelled"],
                        "example": "approval"
                    }
                }
            },
            "Idp.ApprovalAttemptAttribute.Initiator": {
                "type": "object",
                "properties": {
                    "initiator": {
                        "$ref": "#/components/schemas/Idp.RouteUser"
                    }
                }
            },
            "Idp.ApprovalAttemptAttribute.InitiatedAt": {
                "type": "object",
                "properties": {
                    "initiated_at": {
                        "type": "string",
                        "description": "Дата начала согласования",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Idp.ApprovalAttemptAttribute.InitiatorComment": {
                "type": "object",
                "properties": {
                    "initiator_comment": {
                        "type": "string",
                        "description": "Комментарий пользователя, инициировавшего согласование",
                        "example": "Согласуйте, пожалуйста"
                    }
                }
            },
            "Idp.ApprovalAttemptAttribute.FinishedAt": {
                "type": "object",
                "properties": {
                    "finished_at": {
                        "type": "string",
                        "description": "Дата завершения попытки. Завершение - это приведение к одному из статусов: cancelled, approved, not_approved.",
                        "nullable": true,
                        "example": null
                    }
                }
            },
            "Idp.Approver": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.RouteUser"},
                    {"$ref": "#/components/schemas/Idp.ApproverAttribute.Status"},
                    {"$ref": "#/components/schemas/Idp.ApproverAttribute.StatusChangedAt"},
                    {"$ref": "#/components/schemas/Idp.ApproverAttribute.Comment"},
                    {"$ref": "#/components/schemas/Idp.ApproverAttribute.IsEditable"}
                ]
            },
            "Idp.ApprovalStage": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Id"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.SerialNumber"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Name"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.VoteStrategy"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Status"},
                    {"$ref": "#/components/schemas/Idp.RouteStageAttribute.IsEditable"},
                    {
                        "type": "object",
                        "properties": {
                            "approvers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Idp.Approver"
                                }
                            }
                        }
                    }
                ]
            },
            "Idp.ApprovalAttempt": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.Id"},
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.SerialNumber"},
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.Status"},
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.Initiator"},
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.InitiatedAt"},
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.InitiatorComment"},
                    {"$ref": "#/components/schemas/Idp.ApprovalAttemptAttribute.FinishedAt"},
                    {
                        "type": "object",
                        "properties": {
                            "stages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Idp.ApprovalStage"
                                }
                            }
                        }
                    }
                ]
            },
            "Idp.Idp.DetailsBriefView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.IdpAttribute.Id"},
                    {"$ref": "#/components/schemas/Idp.IdpAttribute.Year"},
                    {"$ref": "#/components/schemas/Idp.IdpAttribute.Status"}
                ]
            },
            "Idp.Idp.DetailsView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.Idp.DetailsBriefView"},
                    {"$ref": "#/components/schemas/Idp.IdpAttribute.CountOfTargets"},
                    {"$ref": "#/components/schemas/Idp.IdpAttribute.CountOfTargetsDone"},
                    {"$ref": "#/components/schemas/Idp.IdpAttribute.Price"},
                    {
                        "type": "object",
                        "properties": {
                            "last_attempt_status": {
                                "type": "string",
                                "description": "Актуальная попытка, статус",
                                "enum": ["approval", "approved", "not_approved", "cancelled"],
                                "example": "approval",
                                "nullable": true
                            },
                            "last_attempt_count_of_stages": {
                                "type": "integer",
                                "description": "Актуальная попытка, количество этапов",
                                "example": 3,
                                "nullable": true
                            },
                            "last_attempt_count_of_approved_stages": {
                                "type": "integer",
                                "description": "Актуальная попытка, количество согласованных этапов",
                                "example": 0,
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "Idp.GetIdpCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Idp.Idp.DetailsBriefView"
                                }
                            }
                        }
                    }
                }
            },
            "Idp.GetDefaultRoute.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Idp.Route"
                            }
                        }
                    }
                }
            },
            "Idp.GetIdpDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Idp.Idp.DetailsView"
                            }
                        }
                    }
                }
            },
            "Idp.GetIdpAccessRights.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/Access.Right.StartApproval"},
                                    {"$ref": "#/components/schemas/Access.Right.CancelApproval"},
                                    {"$ref": "#/components/schemas/Access.Right.ApproveStage"},
                                    {"$ref": "#/components/schemas/Access.Right.RejectStage"},
                                    {"$ref": "#/components/schemas/Access.Right.UpdateRoute"}
                                ],
                                "required": ["app.idp.start_approval"]
                            }
                        }
                    }
                }
            },
            "Idp.GetAttemptAccessRights.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/Access.Right.CancelApproval"},
                                    {"$ref": "#/components/schemas/Access.Right.ApproveStage"},
                                    {"$ref": "#/components/schemas/Access.Right.RejectStage"},
                                    {"$ref": "#/components/schemas/Access.Right.UpdateRoute"}
                                ],
                                "required": [
                                    "app.idp.cancel_approval",
                                    "app.idp.approve_stage",
                                    "app.idp.reject_stage",
                                    "app.idp.update_route"
                                ]
                            }
                        }
                    }
                }
            },
            "Idp.GetApprovalAttempts.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "attempt_ids": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "description": "ID попытки",
                                    "example": 890
                                }
                            }
                        }
                    }
                }
            },
            "Idp.GetApprovalAttempts.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Idp.ApprovalAttempt"
                                }
                            }
                        }
                    }
                }
            },
            "Idp.StartApprovalAttempt.Request": {
                "type": "object",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "stages": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "allOf": [
                                        {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Name"},
                                        {"$ref": "#/components/schemas/Idp.RouteStageAttribute.VoteStrategy"},
                                        {"$ref": "#/components/schemas/Idp.RouteStageAttribute.ApproverIDs"}
                                    ],
                                    "required": ["vote_strategy", "approver_ids"]
                                }
                            }
                        }
                    },
                    {"$ref": "#/components/schemas/Idp.ApproverAttribute.Comment"}
                ],
                "required": ["stages"]
            },
            "Idp.ApproveStageOrNot.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Idp.ApproverAttribute.Comment"}
                ]
            },
            "Idp.UpdateAttemptRoute.Request": {
                "type": "object",
                "properties": {
                    "stages": {
                        "type": "array",
                        "description": "Этапы, которые пользователь хочет сохранить",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Id"},
                                {"$ref": "#/components/schemas/Idp.RouteStageAttribute.Name"},
                                {"$ref": "#/components/schemas/Idp.RouteStageAttribute.VoteStrategy"},
                                {"$ref": "#/components/schemas/Idp.RouteStageAttribute.ApproverIDs"}
                            ]
                        }
                    }
                }
            },
            "Idp.UpdateAttemptRoute.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Idp.ApprovalAttempt"
                            }
                        }
                    }
                }
            },
            "Idp.SearchForApprovers.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "stage_id": {
                                "type": "integer",
                                "description": "ID этапа",
                                "example": 8192
                            },
                            "query": {
                                "type": "string",
                                "description": "Текст для поиска по подстроке среди ФИО и прочих параметров",
                                "example": "some_user_login"
                            }
                        },
                        "required": ["stage_id"]
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.CursorPaginationForward"
                    }
                }
            },
            "Idp.SearchForApprovers.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Idp.RouteUser"
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.CursorPaginationMeta"
                            }
                        }
                    }
                }
            },
            "Idp.GetYearsOfAllEmployees.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "description": "Год ИПР",
                                    "example": 2023
                                }
                            }
                        }
                    }
                }
            },
            "Idp.Idp.ToCreate": {
                "type": "object",
                "allOf": [
                    { "$ref": "#/components/schemas/Idp.IdpAttribute.Year" }
                ]
            },
            "Idp.CreateIdp.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Idp.Idp.DetailsBriefView"
                            }
                        }
                    }
                }
            },
            "Idp.IdpCollection.Request": {
                "type": "object",
                "allOf": [
                    { "$ref": "#/components/schemas/Idp.IdpAttribute.Year" },
                    {
                        "type": "object",
                        "properties": {
                            "employee_ids": {
                                "type": "array",
                                "description": "ID сотрудников",
                                "items": {
                                    "type": "integer",
                                    "description": "ID сотрудника",
                                    "example": 64
                                }
                            }
                        }
                    }
                ]
            },
            "Idp.IdpCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Tasks.TaskDefaultObject"
                            }
                        }
                    }
                }
            },
            "Idp.Idp.CheckIfAttemptActionIsAvailable.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "available_employee_ids": {
                                        "type": "array",
                                        "description": "Сотрудники, для которых действие доступно",
                                        "items": {
                                            "type": "integer",
                                            "example": 64
                                        }
                                    },
                                    "not_available_employee_ids": {
                                        "type": "array",
                                        "description": "Сотрудники, для которых действие недоступно",
                                        "items": {
                                            "type": "integer",
                                            "example": 128
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Idp.Idp.ApproveCollection.Request": {
                "type": "object",
                "allOf": [
                    { "$ref": "#/components/schemas/Idp.IdpAttribute.Year" },
                    {
                        "type": "object",
                        "properties": {
                            "employee_ids": {
                                "type": "array",
                                "description": "ID сотрудников",
                                "items": {
                                    "type": "integer",
                                    "description": "ID сотрудника",
                                    "example": 64
                                }
                            }
                        }
                    }
                ]
            },
            "Idp.GenerateReports.Request": {
                "type": "object",
                "properties": {
                    "employee_ids": {
                        "type": "array",
                        "description": "ID сотрудников",
                        "items": {
                            "type": "integer",
                            "description": "ID сотрудника",
                            "example": 64
                        }
                    },
                    "reports": {
                        "type": "array",
                        "description": "Отчёты, которые нужно сформировать",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Tasks.TaskAttribute.Type"},
                                {
                                    "type": "object",
                                    "properties": {
                                        "years": {
                                            "type": "array",
                                            "description": "Годы, по которым осуществляется фильтрация. Если значение не передано, то будет обработана информация за все года.",
                                            "nullable": true,
                                            "items": {
                                                "type": "integer",
                                                "description": "Год",
                                                "example": 2023
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "Idp.GenerateReports.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Tasks.TaskDefaultObject"
                                }
                            }
                        }
                    }
                }
            },
            "Materials.DirectoryAttribute.EntityType": {
                "type": "object",
                "properties": {
                    "entity_type": {
                        "type": "string",
                        "description": "Тип сущности",
                        "example": "material_directory"
                    }
                }
            },
            "Materials.DirectoryAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 234
                    }
                }
            },
            "Materials.DirectoryAttribute.ParentId": {
                "type": "object",
                "properties": {
                    "parent_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "ID родительского каталога",
                        "example": 345
                    }
                }
            },
            "Materials.DirectoryAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Название",
                        "example": "Название"
                    }
                }
            },
            "Materials.DirectoryAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Materials.MaterialAttribute.EntityType": {
                "type": "object",
                "properties": {
                    "entity_type": {
                        "type": "string",
                        "description": "Тип сущности",
                        "enum": ["material"],
                        "example": "material"
                    }
                }
            },
            "Materials.MaterialAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 16
                    }
                }
            },
            "Materials.MaterialAttribute.ParentId": {
                "type": "object",
                "properties": {
                    "parent_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "ID каталога",
                        "example": 512
                    }
                }
            },
            "Materials.MaterialAttribute.DirectoryId": {
                "type": "object",
                "properties": {
                    "directory_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "ID каталога",
                        "example": 512
                    }
                }
            },
            "Materials.MaterialAttribute.SkillIds": {
                "type": "object",
                "properties": {
                    "skill_ids": {
                        "type": "array",
                        "description": "ID навыков",
                        "items": {
                            "type": "integer",
                            "description": "ID навыка",
                            "example": 64
                        }
                    }
                }
            },
            "Materials.MaterialAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "example": "published",
                        "enum": ["published", "awaiting_publication", "archived"]
                    }
                }
            },
            "Materials.MaterialAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Название",
                        "example": "My material"
                    }
                }
            },
            "Materials.MaterialAttribute.Description": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Описание",
                        "example": "My description"
                    }
                }
            },
            "Materials.MaterialAttribute.Price": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number",
                        "format": "float",
                        "description": "Стоимость материала",
                        "example": 5000.00
                    }
                }
            },
            "Materials.MaterialAttribute.IsPaid": {
                "type": "object",
                "properties": {
                    "is_paid": {
                        "type": "boolean",
                        "description": "Является ли материал платным",
                        "example": false
                    }
                }
            },
            "Materials.MaterialAttribute.TypeName": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string",
                        "description": "Название типа",
                        "example": "Название типа"
                    }
                }
            },
            "Materials.MaterialAttribute.TypeId": {
                "type": "object",
                "properties": {
                    "type_id": {
                        "type": "integer",
                        "description": "ID типа",
                        "example": 67
                    }
                }
            },
            "Materials.MaterialAttribute.SourceName": {
                "type": "object",
                "properties": {
                    "source_name": {
                        "type": "string",
                        "description": "Название источника",
                        "example": "Название источника"
                    }
                }
            },
            "Materials.MaterialAttribute.SourceId": {
                "type": "object",
                "properties": {
                    "source_id": {
                        "type": "integer",
                        "description": "ID источника",
                        "example": 78
                    }
                }
            },
            "Materials.MaterialAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Materials.MaterialAttribute.UpdatedAt": {
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "nullable": true,
                        "description": "Дата обновления",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Materials.MaterialAttribute.Url": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "description": "URL",
                        "example": "google.com"
                    }
                }
            },
            "Materials.MaterialAttribute.StartAt": {
                "type": "object",
                "properties": {
                    "start_at": {
                        "type": "string",
                        "nullable": true,
                        "description": "Дата начала мероприятия",
                        "example": "2023-09-01 12:00:00 +03:00"
                    }
                }
            },
            "Materials.MaterialAttribute.EndAt": {
                "type": "object",
                "properties": {
                    "end_at": {
                        "type": "string",
                        "nullable": true,
                        "description": "Дата окончания мароприятия",
                        "example": "2023-09-03 14:00:00 +03:00"
                    }
                }
            },
            "Materials.MaterialAttribute.Duration": {
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "Длительность (в часах)",
                        "example": 24.00
                    }
                }
            },
            "Materials.MaterialAttribute.Provider": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string",
                        "nullable": true,
                        "description": "Провайдер",
                        "example": null
                    }
                }
            },
            "Materials.MaterialAttribute.Trainer": {
                "type": "object",
                "properties": {
                    "trainer": {
                        "type": "string",
                        "nullable": true,
                        "description": "Тренер",
                        "example": null
                    }
                }
            },
            "Materials.MaterialAttribute.Rating": {
                "type": "object",
                "properties": {
                    "rating": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "Рейтинг. Максимальное значение - 5.0.",
                        "example": null
                    }
                }
            },
            "Materials.MaterialAttribute.IsManual": {
                "type": "object",
                "properties": {
                    "is_manual": {
                        "type": "boolean",
                        "description": "Флаг, обозначающий что материал создан вручную",
                        "example": false
                    }
                }
            },
            "Materials.MaterialAttribute.Skills": {
                "type": "object",
                "properties": {
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "allOf": [
                                {"$ref": "#/components/schemas/Skills.ItemAttribute.Id"},
                                {"$ref": "#/components/schemas/Skills.ItemAttribute.Name"}
                            ]
                        }
                    }
                }
            },
            "Materials.MaterialAttribute.CountOfAssignments": {
                "type": "object",
                "properties": {
                    "count_of_assignments": {
                        "type": "integer",
                        "description": "Количество назначений",
                        "example": 0
                    }
                }
            },
            "Materials.MaterialAttribute.AssignmentStatusChangeFlag": {
                "type": "object",
                "properties": {
                    "can_assignment_status_be_changed": {
                        "type": "boolean",
                        "description": "Может ли быть изменён статус назначений",
                        "example": true
                    }
                }
            },
            "Materials.MaterialAttribute.Reason": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "Обоснование",
                        "example": "My reason",
                        "nullable": true
                    }
                }
            },
            "Materials.MaterialAttribute.AssignmentStatus": {
                "type": "object",
                "properties": {
                    "assignment_status": {
                        "type": "string",
                        "description": "Статус назначения",
                        "example": "not_started",
                        "enum": ["not_started", "in_progress", "cancelled", "failed", "done"]
                    }
                }
            },
            "Materials.Directory.DetailView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.ParentId"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Name"}
                ]
            },
            "Materials.TreeOfDirectories.ChildrenAttribute": {
                "type": "object",
                "properties": {
                    "children": {
                        "type": "array",
                        "description": "Список дочерних элементов"
                    }
                }
            },
            "Materials.TreeOfDirectories.BaseObject": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.ParentId"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.TreeOfDirectories.ChildrenAttribute"}
                ]
            },
            "Materials.Tree.ChildrenAttribute": {
                "type": "object",
                "properties": {
                    "children": {
                        "type": "array",
                        "description": "Список дочерних элементов"
                    }
                }
            },
            "Materials.Tree.DirectoryObject": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.EntityType"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.ParentId"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.Tree.ChildrenAttribute"}
                ]
            },
            "Materials.Tree.MaterialObject": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.EntityType"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.ParentId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.IsPaid"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Skills"}
                ]
            },
            "Materials.Directory.AdminPanelCollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.EntityType"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.ParentId"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.CreatedAt"}
                ]
            },
            "Materials.Material.AdminPanelCollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.EntityType"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.ParentId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.TypeName"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.SourceName"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.CreatedAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.CountOfAssignments"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.AssignmentStatusChangeFlag"}
                ]
            },
            "Materials.Material.CollectionView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.IsPaid"}
                ]
            },
            "Materials.Material.DetailView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Status"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.TypeId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.SourceId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.DirectoryId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Description"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.IsPaid"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Price"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Url"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.StartAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.EndAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Duration"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Provider"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Trainer"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Rating"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.CreatedAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.UpdatedAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Skills"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.IsManual"}
                ]
            },
            "Materials.Material.BriefView": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.IsPaid"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.IsManual"}
                ]
            },
            "Materials.getTree.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "anyOf": [
                                        {"$ref": "#/components/schemas/Materials.Tree.DirectoryObject"},
                                        {"$ref": "#/components/schemas/Materials.Tree.MaterialObject"}
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Materials.MaterialDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Materials.Material.DetailView"
                            }
                        }
                    }
                }
            },
            "Materials.CollectionBySkills.Request": {
                "type": "object",
                "properties": {
                    "skill_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "ID навыка",
                            "example": 99
                        }
                    }
                },
                "required": ["skill_ids"]
            },
            "Materials.CollectionBySkills.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Materials.Material.CollectionView"
                                }
                            }
                        }
                    }
                }
            },
            "Materials.ManualMaterialToValidate": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Id"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.TypeId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Url"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.StartAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.EndAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Duration"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Provider"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Trainer"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Price"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Description"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.DirectoryId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.SkillIds"}
                ]
            },
            "Materials.GetTypeCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID типа",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Название типа",
                                            "example": "Прочее"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Materials.GetSourceCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID источника",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Название источника",
                                            "example": "ИПР"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Comments.CommentAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 2048
                    }
                }
            },
            "Comments.CommentAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата оставления комментария",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Comments.CommentAttribute.Author": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "object",
                        "allOf": [
                            {"$ref": "#/components/schemas/Users.UserAttribute.Id"},
                            {"$ref": "#/components/schemas/Users.UserAttribute.FirstName"},
                            {"$ref": "#/components/schemas/Users.UserAttribute.LastName"},
                            {
                                "type": "object",
                                "properties": {
                                    "role": {
                                        "$ref": "#/components/schemas/Roles.RoleDefaultView"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "Comments.CommentAttribute.Text": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Текст комментария",
                        "example": "Your comment text"
                    }
                }
            },
            "Comments.Comment": {
                "type": "object",
                "allOf": [
                    { "$ref": "#/components/schemas/Comments.CommentAttribute.Id" },
                    { "$ref": "#/components/schemas/Comments.CommentAttribute.CreatedAt" },
                    { "$ref": "#/components/schemas/Comments.CommentAttribute.Author" },
                    { "$ref": "#/components/schemas/Comments.CommentAttribute.Text" }
                ]
            },
            "Employees.EmployeeAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 123
                    }
                }
            },
            "Employees.EmployeeAttribute.ExternalId": {
                "type": "object",
                "properties": {
                    "external_id": {
                        "type": "string",
                        "description": "Внешний ID",
                        "example": "employee_external_id"
                    }
                }
            },
            "Employees.EmployeeAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "enum": ["active", "archived"],
                        "example": "active"
                    }
                }
            },
            "Employees.EmployeeAttribute.Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email",
                        "example": "employee.of.the.month@test.com"
                    }
                }
            },
            "Employees.EmployeeAttribute.FirstName": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "Имя",
                        "example": "Иван"
                    }
                }
            },
            "Employees.EmployeeAttribute.LastName": {
                "type": "object",
                "properties": {
                    "last_name": {
                        "type": "string",
                        "description": "Фамилия",
                        "example": "Иванов"
                    }
                }
            },
            "Employees.EmployeeAttribute.FullName": {
                "type": "object",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "description": "Имя, фамилия",
                        "example": "Иван Иванов"
                    }
                }
            },
            "Employees.EmployeeAttribute.CreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "Divisions.ItemAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 16
                    }
                }
            },
            "Divisions.ItemAttribute.ParentID": {
                "type": "object",
                "properties": {
                    "parent_id": {
                        "type": "integer",
                        "description": "ID родителя",
                        "example": 512,
                        "nullable": true
                    }
                }
            },
            "Divisions.ItemAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "My division"
                    }
                }
            },
            "Divisions.TreeItemAttribute.Children": {
                "type": "object",
                "properties": {
                    "children": {
                        "type": "array",
                        "description": "Список дочерних элементов"
                    }
                }
            },
            "Divisions.TreeItem.Base": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Divisions.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Divisions.ItemAttribute.ParentID"},
                    {"$ref": "#/components/schemas/Divisions.ItemAttribute.Name"},
                    {"$ref": "#/components/schemas/Divisions.TreeItemAttribute.Children"}
                ]
            },
            "Divisions.Tree.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Divisions.TreeItem.Base"
                                }
                            }
                        }
                    }
                }
            },
            "Divisions.DivisionDefaultView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 512
                    },
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "Московский филиал"
                    }
                }
            },
            "Tasks.TaskAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 2048
                    }
                }
            },
            "Tasks.TaskAttribute.Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип",
                        "example": "targets.report",
                        "enum": [
                            "idp.status_report",
                            "idp.approve_collection",
                            "targets.report",
                            "materials.report",
                            "materials.import",
                            "users.import"
                        ]
                    }
                }
            },
            "Tasks.TaskAttribute.Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "example": "done",
                        "enum": ["new", "in_progress", "failed", "done", "done_partially"]
                    }
                }
            },
            "Tasks.TaskAttribute.CompletionPercent": {
                "type": "object",
                "properties": {
                    "completion_percent": {
                        "type": "integer",
                        "description": "Процент исполнения",
                        "example": 100,
                        "nullable": true
                    }
                }
            },
            "Tasks.TaskAttribute.FileId": {
                "type": "object",
                "properties": {
                    "file_id": {
                        "type": "integer",
                        "description": "ID файла",
                        "example": 128,
                        "nullable": true
                    }
                }
            },
            "Tasks.TaskAttribute.Message": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Комментарий по результатам выполнения задачи",
                        "example": null,
                        "nullable": true
                    }
                }
            },
            "Tasks.TaskAttribute.ErrorDetailsFlag": {
                "type": "object",
                "properties": {
                    "has_error_details": {
                        "type": "boolean",
                        "description": "Флаг, обозначающий наличие подробных ошибок. Для получения подробных ошибок обращаться к методу 11.05.",
                        "example": false
                    }
                }
            },
            "Tasks.TaskDefaultObject": {
                "type": "object",
                "description": "Задача",
                "allOf": [
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.Id"},
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.Type"},
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.Status"},
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.CompletionPercent"},
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.FileId"},
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.Message"},
                    {"$ref": "#/components/schemas/Tasks.TaskAttribute.ErrorDetailsFlag"}
                ]
            },
            "Tasks.ErrorDetailObject": {
                "type": "object",
                "properties": {
                    "row": {
                        "type": "integer",
                        "description": "Номер строки в файле, на которой произошла ошибка",
                        "example": 2
                    },
                    "message": {
                        "type": "string",
                        "description": "Текст ошибки",
                        "example": "Атрибут 'login' должен быть уникальным"
                    }
                }
            },
            "Tasks.Collection.Request": {
                "type": "object",
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/Base.CursorPaginationBackward"
                    }
                }
            },
            "Tasks.Collection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Tasks.TaskDefaultObject"
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.CursorPaginationMeta"
                            }
                        }
                    }
                }
            },
            "Tasks.LongPoll.Request": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "description": "Список ID асинхронных задач",
                        "items": {
                            "type": "integer",
                            "example": 2048
                        }
                    }
                }
            },
            "Tasks.GetErrorDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Tasks.ErrorDetailObject"
                                }
                            }
                        }
                    }
                }
            },
            "Notifications.ConfigAttribute.Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип",
                        "example": "employee.idp_actualization"
                    }
                }
            },
            "Notifications.ConfigAttribute.AvailableModes": {
                "type": "object",
                "properties": {
                    "available_modes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Доступные режимы",
                            "enum": ["immediately", "daily", "never"]
                        }
                    }
                }
            },
            "Notifications.ConfigAttribute.DefaultMode": {
                "type": "object",
                "properties": {
                    "default_mode": {
                        "type": "string",
                        "description": "Режим по умолчанию",
                        "enum": ["immediately", "daily", "never"]
                    }
                }
            },
            "Notifications.ConfigAttribute.SelectedMode": {
                "type": "object",
                "properties": {
                    "selected_mode": {
                        "type": "string",
                        "description": "Выбранный режим",
                        "enum": ["immediately", "daily", "never"]
                    }
                }
            },
            "Notifications.Sections.Self": {
                "type": "object",
                "properties": {
                    "section": {
                        "type": "string",
                        "description": "Тип раздела",
                        "enum": ["self"]
                    },
                    "config": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Конфигурация для конкретного типа",
                            "allOf": [
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.Type"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.AvailableModes"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.DefaultMode"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.SelectedMode"}
                            ]
                        }
                    }
                }
            },
            "Notifications.Sections.Employees": {
                "type": "object",
                "properties": {
                    "section": {
                        "type": "string",
                        "description": "Тип раздела",
                        "enum": ["employees"]
                    },
                    "config": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Конфигурация для конкретного типа",
                            "allOf": [
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.Type"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.AvailableModes"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.DefaultMode"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.SelectedMode"}
                            ]
                        }
                    }
                }
            },
            "Notifications.GetConfig.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {"$ref": "#/components/schemas/Notifications.Sections.Self"},
                                        {"$ref": "#/components/schemas/Notifications.Sections.Employees"}
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Notifications.SaveConfig.Request": {
                "type": "object",
                "description": "Объекты конфигурации, которые нужно сохранить",
                "properties": {
                    "config": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Конфигурация для конкретного типа",
                            "allOf": [
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.Type"},
                                {"$ref": "#/components/schemas/Notifications.ConfigAttribute.SelectedMode"}
                            ]
                        }
                    }
                }
            },
            "AdminPanel.Roles.GetCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Roles.RoleDefaultView"
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.UserSources.GetCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Источник данных о пользователе",
                                    "enum": ["equeo", "idp", "other"]
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID пользователя (аккаунта)",
                        "example": "user_001"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountLogin": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string",
                        "description": "Логин пользователя (аккаунта)",
                        "example": "user_001"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус пользователя (аккаунта)",
                        "example": "active",
                        "enum": ["active", "archived"]
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountPassword": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Пароль пользователя (аккаунта)",
                        "example": "qwerty123"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountCreatedAt": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Дата создания пользователя (аккаунта)",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountUpdatedAt": {
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "description": "Дата обновления пользователя (аккаунта)",
                        "example": "2023-09-01 12:10:20 +03:00"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountFirstName": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "Имя пользователя (аккаунта)",
                        "example": "Иван"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountLastName": {
                "type": "object",
                "properties": {
                    "last_name": {
                        "type": "string",
                        "description": "Фамилия пользователя (аккаунта)",
                        "example": "Иванов"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.AccountEmail": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email пользователя (аккаунта)",
                        "example": "ivanov.ivan@test.com"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.EmployeeId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID сотрудника",
                        "example": 128
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.EmployeeFirstName": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "Имя сотрудника",
                        "example": "Иван"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.EmployeeMiddleName": {
                "type": "object",
                "properties": {
                    "middle_name": {
                        "type": "string",
                        "description": "Отчество сотрудника",
                        "example": "Иванович"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.EmployeeLastName": {
                "type": "object",
                "properties": {
                    "last_name": {
                        "type": "string",
                        "description": "Фамилия сотрудника",
                        "example": "Иванов"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.EmployeeEmail": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email сотрудника",
                        "example": "ivan.ivanov@test.com"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.EmployeePhone": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string",
                        "description": "Номер телефона сотрудника",
                        "example": "+71234567890"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.Role": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/Roles.RoleDefaultView"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.Position": {
                "type": "object",
                "properties": {
                    "position": {
                        "$ref": "#/components/schemas/Positions.PositionDefaultView"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.Division": {
                "type": "object",
                "properties": {
                    "division": {
                        "$ref": "#/components/schemas/Divisions.DivisionDefaultView"
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.Chiefs": {
                "type": "object",
                "properties": {
                    "chiefs": {
                        "type": "array",
                        "description": "Список руководителей",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "ID руководителя",
                                    "example": "user_010"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "Имя руководителя",
                                    "example": "Константин"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Фамилия руководителя",
                                    "example": "Константинопольский"
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.DivisionAccess": {
                "type": "object",
                "properties": {
                    "division_access": {
                        "type": "array",
                        "description": "Элементы орг. структуры, к которым есть доступ",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID элемента орг. структуры",
                                    "example": 64
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Название элемента орг. структуры",
                                    "example": "Подразделение № 345"
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.UserDetails.Attribute.IndividualAccess": {
                "type": "object",
                "properties": {
                    "individual_access": {
                        "type": "array",
                        "description": "Сотрудники, к которым есть доступ в индивидуальном порядке",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID сотрудника",
                                    "example": 64
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "Имя сотрудника",
                                    "example": "Константин"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Фамилия сотрудника",
                                    "example": "Константинопольский"
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["created_at", "id"],
                                "example": "created_at"
                            }
                        }
                    }
                ]
            },
            "AdminPanel.Users.Collection.Filter": {
                "type": "object",
                "properties": {
                    "archive": {
                        "type": "boolean",
                        "description": "Искать в архиве",
                        "nullable": true,
                        "example": false
                    },
                    "id": {
                        "type": "string",
                        "description": "ID пользователя (аккаунта)",
                        "nullable": true,
                        "example": "user_001"
                    },
                    "employee_text_query": {
                        "type": "string",
                        "description": "Текстовая строка для поиска по атрибутам сотрудника (внешний ID, имя, название должности)",
                        "nullable": true,
                        "example": "Иван"
                    },
                    "role_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID роли",
                            "example": 16
                        }
                    },
                    "division_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID элемента орг. структуры",
                            "example": 256
                        }
                    },
                    "created_after": {
                        "type": "string",
                        "description": "Включать в результат пользователей с датой создания больше указанной",
                        "nullable": true,
                        "example": "2023-12-26 11:57:01 +00:00"
                    },
                    "created_before": {
                        "type": "string",
                        "description": "Включать в результат пользователей с датой создания меньше указанной",
                        "nullable": true,
                        "example": "2023-12-26 11:57:01 +00:00"
                    },
                    "sources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Источник данных о пользователе",
                            "example": "idp"
                        }
                    }
                }
            },
            "AdminPanel.Users.GetCollection.Request": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/AdminPanel.Users.Collection.Sort"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/AdminPanel.Users.Collection.Filter"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.OffsetPagination"
                    }
                }
            },
            "AdminPanel.Users.GetCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Пользователь",
                                    "allOf": [
                                        {"$ref": "#/components/schemas/Users.UserAttribute.Id"},
                                        {"$ref": "#/components/schemas/Users.UserAttribute.Source"},
                                        {"$ref": "#/components/schemas/Users.UserAttribute.CreatedAt"},
                                        {"$ref": "#/components/schemas/Users.UserAttribute.FirstName"},
                                        {"$ref": "#/components/schemas/Users.UserAttribute.LastName"},
                                        {
                                            "type": "object",
                                            "properties": {
                                                "employee": {
                                                    "type": "object",
                                                    "description": "Сотрудник. NULL, если отсутствует.",
                                                    "nullable": true,
                                                    "allOf": [
                                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Id"},
                                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.ExternalId"},
                                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName"},
                                                        {"$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName"},
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "position": {
                                                                    "$ref": "#/components/schemas/Positions.PositionDefaultView"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "role": {
                                                    "$ref": "#/components/schemas/Roles.RoleDefaultView"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.OffsetPaginationMeta"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.ArchiveCollection.Request": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "ID пользователя (аккаунта)",
                            "example": "user_001"
                        }
                    }
                },
                "required": ["ids"]
            },
            "AdminPanel.Users.RestoreCollection.Request": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "ID пользователя (аккаунта)",
                            "example": "user_001"
                        }
                    }
                },
                "required": ["ids"]
            },
            "AdminPanel.Users.ImportCollection.Request": {
                "type": "object",
                "properties": {
                    "file": {
                        "description": "Импортируемый файл",
                        "type": "string",
                        "format": "binary"
                    },
                    "update_users": {
                        "type": "boolean",
                        "description": "Обновить данные пользователей, если они уже есть на платформе",
                        "nullable": true,
                        "example": true
                    }
                },
                "required": ["file"]
            },
            "AdminPanel.Users.ImportCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Tasks.TaskDefaultObject"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.GetUserDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountId"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountLogin"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountStatus"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountCreatedAt"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountUpdatedAt"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountFirstName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountLastName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountEmail"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.Role"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.DivisionAccess"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.IndividualAccess"},
                                    {
                                        "type": "object",
                                        "description": "Сотрудник",
                                        "properties": {
                                            "employee": {
                                                "type": "object",
                                                "allOf": [
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeId"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeFirstName"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeMiddleName"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeLastName"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeEmail"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeePhone"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.Position"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.Division"},
                                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.Chiefs"}
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "AdminPanel.Users.UpdateUserDetails.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountLogin"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountPassword"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountFirstName"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountLastName"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountEmail"},
                    {
                        "type": "object",
                        "properties": {
                            "role_id": {
                                "type": "integer",
                                "description": "ID роли",
                                "example": 56
                            },
                            "division_access_ids": {
                                "type": "array",
                                "description": "ID элементов орг. структуры, к которым у пользователя есть доступ",
                                "items": {
                                    "type": "integer",
                                    "description": "ID элемента орг. структуры",
                                    "example": 64
                                }
                            },
                            "individual_access_ids": {
                                "type": "array",
                                "description": "ID сотрудников, к которым у пользователя есть доступ в индивидуальном порядке",
                                "items": {
                                    "type": "integer",
                                    "description": "ID сотрудника",
                                    "example": 64
                                }
                            },
                            "employee": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeFirstName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeMiddleName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeLastName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeEmail"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeePhone"},
                                    {
                                        "type": "object",
                                        "properties": {
                                            "position_id": {
                                                "type": "integer",
                                                "description": "ID должности",
                                                "example": 256
                                            },
                                            "division_id": {
                                                "type": "integer",
                                                "description": "ID элемента орг. структуры, которому принадлежит сотрудник",
                                                "example": 256
                                            },
                                            "chief_ids": {
                                                "type": "array",
                                                "description": "ID руководителей",
                                                "items": {
                                                    "type": "string",
                                                    "description": "ID руководителя (аккаунта)",
                                                    "example": "user_010"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "AdminPanel.Users.CreateUser.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountLogin"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountPassword"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountFirstName"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountLastName"},
                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.AccountEmail"},
                    {
                        "type": "object",
                        "properties": {
                            "role_id": {
                                "type": "integer",
                                "description": "ID роли",
                                "example": 56
                            },
                            "division_access_ids": {
                                "type": "array",
                                "description": "ID элементов орг. структуры, к которым у пользователя есть доступ",
                                "items": {
                                    "type": "integer",
                                    "description": "ID элемента орг. структуры",
                                    "example": 64
                                }
                            },
                            "individual_access_ids": {
                                "type": "array",
                                "description": "ID сотрудников, к которым у пользователя есть доступ в индивидуальном порядке",
                                "items": {
                                    "type": "integer",
                                    "description": "ID сотрудника",
                                    "example": 64
                                }
                            },
                            "employee": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeFirstName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeMiddleName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeLastName"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeeEmail"},
                                    {"$ref": "#/components/schemas/AdminPanel.Users.UserDetails.Attribute.EmployeePhone"},
                                    {
                                        "type": "object",
                                        "properties": {
                                            "position_id": {
                                                "type": "integer",
                                                "description": "ID должности",
                                                "example": 256
                                            },
                                            "division_id": {
                                                "type": "integer",
                                                "description": "ID элемента орг. структуры, которому принадлежит сотрудник",
                                                "example": 256
                                            },
                                            "chief_ids": {
                                                "type": "array",
                                                "description": "ID руководителей",
                                                "items": {
                                                    "type": "string",
                                                    "description": "ID руководителя (аккаунта)",
                                                    "example": "user_010"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ],
                "required": ["login", "password", "first_name", "last_name", "email", "role_id"]
            },
            "Positions.ItemAttribute.Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID",
                        "example": 256
                    }
                }
            },
            "Positions.ItemAttribute.Name": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Название",
                        "example": "Сварщик"
                    }
                }
            },
            "Positions.ItemAttribute.PercentOfSuitability": {
                "type": "object",
                "properties": {
                    "percent_of_suitability": {
                        "type": "integer",
                        "description": "Процент соответствия. NULL, если должность не предъявляет требований к навыкам.",
                        "example": 25
                    }
                }
            },
            "Positions.PositionDefaultView": {
                "type": "object",
                "nullable": true,
                "description": "Текущая должность. NULL, если отсутствует.",
                "allOf": [
                    {"$ref": "#/components/schemas/Positions.ItemAttribute.Id"},
                    {"$ref": "#/components/schemas/Positions.ItemAttribute.Name"}
                ]
            },
            "Positions.QuickSearch.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "allOf": [
                                        {"$ref": "#/components/schemas/Positions.ItemAttribute.Id"},
                                        {"$ref": "#/components/schemas/Positions.ItemAttribute.Name"}
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.CursorPaginationMeta"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["id", "created_at", "name"],
                                "example": "id"
                            }
                        }
                    }
                ]
            },
            "AdminPanel.Materials.Collection.Filter": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Статус",
                        "example": "published"
                    },
                    "parent_id": {
                        "type": "integer",
                        "description": "ID родительского элемента",
                        "nullable": true,
                        "example": null
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID элемента",
                        "nullable": true,
                        "example": 345
                    },
                    "name": {
                        "type": "string",
                        "description": "Текстовая строка для поиска по названию",
                        "nullable": true,
                        "example": "Лучший материал"
                    },
                    "type_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID типа",
                            "example": 16
                        }
                    },
                    "source_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID источника",
                            "example": 256
                        }
                    },
                    "created_after": {
                        "type": "string",
                        "description": "Включать в результат элементы с датой создания больше указанной",
                        "nullable": true,
                        "example": "2023-12-26 11:57:01 +00:00"
                    },
                    "created_before": {
                        "type": "string",
                        "description": "Включать в результат элементы с датой создания меньше указанной",
                        "nullable": true,
                        "example": "2023-12-26 11:57:01 +00:00"
                    }
                }
            },
            "AdminPanel.Materials.GetCollection.Request": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/AdminPanel.Materials.Collection.Sort"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/AdminPanel.Materials.Collection.Filter"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.OffsetPagination"
                    }
                }
            },
            "AdminPanel.Materials.GetCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Объект каталога или материала",
                                    "anyOf": [
                                        {"$ref": "#/components/schemas/Materials.Directory.AdminPanelCollectionView"},
                                        {"$ref": "#/components/schemas/Materials.Material.AdminPanelCollectionView"}
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.OffsetPaginationMeta"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.AssignmentCollection.Filter": {
                "type": "object",
                "properties": {
                    "statuses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Статус назначения",
                            "example": "not_started",
                            "enum": ["not_started", "in_progress", "cancelled", "failed", "done"]
                        }
                    },
                    "idp_years": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "Год ИПР",
                            "example": 2024
                        }
                    },
                    "idp_statuses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Статус ИПР",
                            "example": "draft",
                            "enum": ["draft", "approval", "approved", "not_approved", "cancelled"]
                        }
                    },
                    "division_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID элемента орг. структуры",
                            "example": 16
                        }
                    },
                    "employee_statuses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Статус сотрудника",
                            "example": "active",
                            "enum": ["active", "archived"]
                        }
                    },
                    "target_name": {
                        "type": "string",
                        "description": "Название цели",
                        "example": "Моя цель"
                    },
                    "employee_text_query": {
                        "type": "string",
                        "description": "Текстовая строка для поиска по атрибутам сотрудника (внешний ID, имя, название должности)",
                        "nullable": true,
                        "example": "Иван"
                    }
                }
            },
            "AdminPanel.Materials.GetAssignmentCollection.Request": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/AdminPanel.Materials.AssignmentCollection.Filter"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.OffsetPagination"
                    }
                }
            },
            "AdminPanel.Materials.GetAssignmentCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Объект назначения. Табличное отображние.",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Статус назначения",
                                            "example": "not_started",
                                            "enum": ["not_started", "in_progress", "cancelled", "failed", "done"]
                                        },
                                        "target": {
                                            "type": "object",
                                            "description": "Цель",
                                            "allOf": [
                                                {"$ref": "#/components/schemas/Targets.TargetAttribute.Id"},
                                                {"$ref": "#/components/schemas/Targets.TargetAttribute.Name"}
                                            ]
                                        },
                                        "idp": {
                                            "type": "object",
                                            "description": "ИПР",
                                            "allOf": [
                                                {"$ref": "#/components/schemas/Idp.IdpAttribute.Year"},
                                                {"$ref": "#/components/schemas/Idp.IdpAttribute.Status"}
                                            ]
                                        },
                                        "employee": {
                                            "type": "object",
                                            "description": "Сотрудник",
                                            "allOf": [
                                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.Id"},
                                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.ExternalId"},
                                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.FirstName"},
                                                {"$ref": "#/components/schemas/Employees.EmployeeAttribute.LastName"},
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "position": {
                                                            "$ref": "#/components/schemas/Positions.PositionDefaultView"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.OffsetPaginationMeta"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.UpdateAssignmentStatuses.Request": {
                "type": "object",
                "properties": {
                    "target_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "ID цели",
                            "example": 32
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Статус назначения",
                        "example": "not_started",
                        "enum": ["not_started", "in_progress", "cancelled", "failed", "done"]
                    }
                }
            },
            "AdminPanel.Materials.ObjectIdsRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "ID каталога или материала",
                            "example": 123
                        }
                    }
                }
            },
            "AdminPanel.Materials.ObjectIdsAndDirectoryIdRequest": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/AdminPanel.Materials.ObjectIdsRequest"},
                    {
                        "type": "object",
                        "properties": {
                            "directory_id": {
                                "type": "integer",
                                "nullable": true,
                                "description": "ID каталога",
                                "example":null
                            }
                        }
                    }
                ]
            },
            "AdminPanel.Materials.ImportMaterials.Request": {
                "type": "object",
                "properties": {
                    "file": {
                        "description": "Импортируемый файл",
                        "type": "string",
                        "format": "binary"
                    },
                    "publish": {
                        "type": "boolean",
                        "description": "Опубликовать сразу",
                        "nullable": true,
                        "example": true
                    },
                    "directory_id": {
                        "type": "integer",
                        "description": "ID каталога",
                        "nullable": true,
                        "example": 67
                    }
                },
                "required": ["file"]
            },
            "AdminPanel.Materials.ImportMaterials.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Tasks.TaskDefaultObject"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.CreateMaterial.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.TypeId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Url"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.StartAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.EndAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Duration"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Provider"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Trainer"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Price"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Description"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.DirectoryId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.SkillIds"},
                    {
                        "type": "object",
                        "properties": {
                            "publish": {
                                "type": "boolean",
                                "nullable": true,
                                "description": "Флаг, отвечающий за мгновенную публикацию",
                                "example": false
                            }
                        }
                    }
                ],
                "required": ["type_id", "name"]
            },
            "AdminPanel.Materials.GetMaterialDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Materials.Material.DetailView"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.UpdateMaterial.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.TypeId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Url"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.StartAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.EndAt"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Duration"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Provider"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Trainer"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Price"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.Description"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.DirectoryId"},
                    {"$ref": "#/components/schemas/Materials.MaterialAttribute.SkillIds"}
                ]
            },
            "AdminPanel.Materials.TreeOfDirectories.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Materials.TreeOfDirectories.BaseObject"
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.CreateDirectory.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Name"},
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.ParentId"}
                ],
                "required": ["name"]
            },
            "AdminPanel.Materials.RenameDirectory.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Materials.DirectoryAttribute.Name"}
                ],
                "required": ["name"]
            },
            "AdminPanel.Materials.DirectoryDetails.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "$ref": "#/components/schemas/Materials.Directory.DetailView"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Materials.GetPathToDirectory.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Materials.Directory.DetailView"
                                }
                            }
                        }
                    }
                }
            },
            "AdminPanel.TargetTemplates.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["count_of_assignments"],
                                "example": "count_of_assignments"
                            }
                        }
                    }
                ]
            },
            "AdminPanel.TargetTemplates.Collection.Filter": {
                "type": "object",
                "properties": {
                    "assignment_types": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "Тип назначения (одноразовый, повторяющийся)",
                            "enum": ["once", "recurrent"],
                            "example": "recurrent"
                        }
                    },
                    "role_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID роли",
                            "example": 8
                        }
                    },
                    "division_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID элемента орг. структуры",
                            "example": 16
                        }
                    },
                    "employee_ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "description": "ID сотрудника",
                            "example": 32
                        }
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Текстовая строка для поиска по названию",
                        "example": "Лучший шаблон"
                    }
                }
            },
            "AdminPanel.TargetTemplates.GetCollection.Request": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/AdminPanel.TargetTemplates.Collection.Sort"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/AdminPanel.TargetTemplates.Collection.Filter"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.OffsetPagination"
                    }
                }
            },
            "AdminPanel.TargetTemplates.GetCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TargetTemplates.CollectionView"
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.OffsetPaginationMeta"
                            }
                        }
                    }
                }
            },
            "AdminPanel.TargetTemplates.UpsertTemplate.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Name"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Description"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Priority"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Scope.Ids"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.ScopeExtra.Ids"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.ApplyToCurrentUsers"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.AssignmentType"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.RecurrentAssignment"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Deadline"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.MaterialIds"},
                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.SkillIds"}
                ],
                "required": ["name", "priority", "assignment_type", "deadline"]
            },
            "AdminPanel.TargetTemplates.ObjectIdsRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "description": "ID шаблонов",
                            "example": 123
                        }
                    }
                }
            },
            "AdminPanel.TargetTemplates.GetTemplate.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Id"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Name"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Description"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Priority"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Scope.Objects"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.ScopeExtra.Objects"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.ApplyToCurrentUsers"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.AssignmentType"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.RecurrentAssignment"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Deadline"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Materials"},
                                    {"$ref": "#/components/schemas/TargetTemplates.TemplateAttribute.Skills"}
                                ]
                            }
                        }
                    }
                }
            },
            "AdminPanel.Companies.Collection.Sort": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Base.Sort"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "string",
                                "description": "Значение, по которому производится сортировка. Если не указано, то будет использовано значение по умолчанию.",
                                "enum": ["id", "name", "user_limit"],
                                "example": "id"
                            }
                        }
                    }
                ]
            },
            "AdminPanel.Companies.Collection.Filter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID компании",
                        "nullable": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "description": "Название компании",
                        "nullable": true,
                        "example": "Лучшая компания"
                    },
                    "statuses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Статус компании",
                            "example": "active",
                            "enum": ["active", "hidden"]
                        }
                    },
                    "user_limits": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Лимит пользователей",
                            "example": "exceeded",
                            "enum": ["exceeded", "ninety_percent"]
                        }
                    }
                }
            },
            "AdminPanel.Companies.GetCollection.Request": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/AdminPanel.Companies.Collection.Sort"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/AdminPanel.Companies.Collection.Filter"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Base.OffsetPagination"
                    }
                }
            },
            "AdminPanel.Companies.GetCollection.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Компания",
                                    "allOf": [
                                        {"$ref": "#/components/schemas/Companies.CompanyAttribute.Id"},
                                        {"$ref": "#/components/schemas/Companies.CompanyAttribute.Status"},
                                        {"$ref": "#/components/schemas/Companies.CompanyAttribute.Name"},
                                        {"$ref": "#/components/schemas/Companies.CompanyAttribute.UserLimit"}
                                    ]
                                }
                            }
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "pagination": {
                                "$ref": "#/components/schemas/Base.OffsetPaginationMeta"
                            }
                        }
                    }
                }
            },
            "AdminPanel.Companies.CreateCompany.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.SubDomain"},
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.Name"},
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.UserLimit"},
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.Status"}
                ],
                "required": ["sub_domain", "name", "user_limit"]
            },
            "AdminPanel.Companies.GetBaseSettings.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "allOf": [
                                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.Id"},
                                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.Status"},
                                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.SubDomain"},
                                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.Name"},
                                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.UserLimit"}
                                ]
                            }
                        }
                    }
                }
            },
            "AdminPanel.Companies.UpdateBaseSettings.Request": {
                "type": "object",
                "allOf": [
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.SubDomain"},
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.Name"},
                    {"$ref": "#/components/schemas/Companies.CompanyAttribute.UserLimit"}
                ]
            },
            "AdminPanel.Companies.GetChangeHistory.SuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Тип записи",
                                            "example": "updated",
                                            "enum": [
                                                "updated",
                                                "created"
                                            ]
                                        },
                                        "admin_login": {
                                            "type": "string",
                                            "description": "Логин администратора",
                                            "example": "admin_login"
                                        },
                                        "datetime": {
                                            "type": "string",
                                            "description": "Дата и время",
                                            "example": "2023-09-01 12:10:20 +03:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "Base.Query.ExtraAttributes": {
                "name": "extra_attributes",
                "in": "query",
                "required": false,
                "description": "Массив атрибутов, которые нужно включить в ответ дополнительно.",
                "example": ["first_attribute_name", "second_attribute_name"],
                "schema": {
                    "type": "array"
                }
            },
            "Companies.Path.Company.SubDomain": {
                "name": "sub_domain",
                "in": "path",
                "required": true,
                "description": "Поддомен компании",
                "example": "test",
                "schema": {
                    "type": "string"
                }
            },
            "Companies.Path.Company.Id": {
                "name": "company_id",
                "in": "path",
                "required": true,
                "description": "ID компании",
                "example": 123,
                "schema": {
                    "type": "integer"
                }
            },
            "Skills.Path.Skill.Id": {
                "name": "skill_id",
                "in": "path",
                "required": true,
                "description": "ID навыка",
                "example": 512,
                "schema": {
                    "type": "integer"
                }
            },
            "Materials.Path.Material.Id": {
                "name": "material_id",
                "in": "path",
                "required": true,
                "description": "ID материала",
                "example": 512,
                "schema": {
                    "type": "integer"
                }
            },
            "Targets.Path.Target.Id": {
                "name": "target_id",
                "in": "path",
                "required": true,
                "description": "ID цели",
                "example": 512,
                "schema": {
                    "type": "integer"
                }
            },
            "Employees.Path.Employee.Id": {
                "name": "employee_id",
                "in": "path",
                "required": true,
                "description": "ID сотрудника.",
                "example": 32,
                "schema": {
                    "type": "integer"
                }
            },
            "Employees.Query.Employee.Id": {
                "name": "employee_id",
                "in": "query",
                "required": false,
                "description": "ID сотрудника. Если не указан, то пытаемся получить из текущего пользователя.",
                "example": 123,
                "schema": {
                    "type": "integer"
                }
            },
            "Idp.Path.Idp.Id": {
                "name": "idp_id",
                "in": "path",
                "required": true,
                "description": "ИПР ID",
                "example": 345,
                "schema": {
                    "type": "integer"
                }
            },
            "Idp.Path.ApprovalAttempt.Id": {
                "name": "attempt_id",
                "in": "path",
                "required": true,
                "description": "ID попытки согласования",
                "example": 512,
                "schema": {
                    "type": "integer"
                }
            },
            "Tasks.Path.Task.Id": {
                "name": "task_id",
                "in": "path",
                "required": true,
                "description": "ID асинхронной задачи",
                "example": 2048,
                "schema": {
                    "type": "integer"
                }
            },
            "Files.Path.File.Id": {
                "name": "file_id",
                "in": "path",
                "required": true,
                "description": "ID файла",
                "example": 256,
                "schema": {
                    "type": "integer"
                }
            },
            "AdminPanel.Path.User.Id": {
                "name": "user_id",
                "in": "path",
                "required": true,
                "description": "ID пользователя (аккаунта).",
                "example": "user_001",
                "schema": {
                    "type": "string"
                }
            },
            "AdminPanel.Path.Material.Id": {
                "name": "material_id",
                "in": "path",
                "required": true,
                "description": "ID материала.",
                "example": 34,
                "schema": {
                    "type": "integer"
                }
            },
            "AdminPanel.Path.Directory.Id": {
                "name": "directory_id",
                "in": "path",
                "required": true,
                "description": "ID каталога.",
                "example": 45,
                "schema": {
                    "type": "integer"
                }
            },
            "AdminPanel.Path.TargetTemplate.Id": {
                "name": "template_id",
                "in": "path",
                "required": true,
                "description": "ID шаблона цели.",
                "example": 56,
                "schema": {
                    "type": "integer"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "description": "Bearer authorization",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
